{
    "sourceFile": "js/services.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 162,
            "patches": [
                {
                    "date": 1729686510028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729691031040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// hero bg - animation\n document.addEventListener('DOMContentLoaded', () => {\n     const interBubble = document.querySelector('.interactive');\n     let curX = 0;\n     let curY = 0;\n@@ -17,5 +18,19 @@\n         tgY = event.clientY;\n     });\n \n     move();\n+\n+\n+    // hero cards - animation\n+    let card = document.querySelector('.card');\n+\n+    document.addEventListener('mousemove', function (e) {\n+        let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n+        let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n+\n+\n+\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729691041690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     move();\n \n \n     // hero cards - animation\n-    let card = document.querySelector('.card');\n+    let card = document.querySelector('.servheroinfo');\n \n     document.addEventListener('mousemove', function (e) {\n         let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n         let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n"
                },
                {
                    "date": 1729691182112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     move();\n \n \n     // hero cards - animation\n-    let card = document.querySelector('.servheroinfo');\n+    let card = document.querySelector('.card');\n \n     document.addEventListener('mousemove', function (e) {\n         let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n         let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n"
                },
                {
                    "date": 1729691239943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,15 +21,15 @@\n     move();\n \n \n     // hero cards - animation\n-    let card = document.querySelector('.card');\n+    // let card = document.querySelector('.card');\n \n-    document.addEventListener('mousemove', function (e) {\n-        let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n-        let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    });\n+    // document.addEventListener('mousemove', function (e) {\n+    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n+    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n+    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    // });\n \n \n \n \n"
                },
                {
                    "date": 1729691320271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,15 @@\n     //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n+    let card = document.querySelector('.card');\n \n+    card.addEventListener('mousemove', function (e) {\n+        let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729691434381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+// hero bg - animation\n+document.addEventListener('DOMContentLoaded', () => {\n+    const interBubble = document.querySelector('.interactive');\n+    let curX = 0;\n+    let curY = 0;\n+    let tgX = 0;\n+    let tgY = 0;\n+\n+    const move = () => {\n+        curX += (tgX - curX) / 20;\n+        curY += (tgY - curY) / 20;\n+        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+        requestAnimationFrame(move);\n+    };\n+\n+    window.addEventListener('mousemove', (event) => {\n+        tgX = event.clientX;\n+        tgY = event.clientY;\n+    });\n+\n+    move();\n+\n+\n+    // hero cards - animation\n+    // let card = document.querySelector('.card');\n+\n+    // document.addEventListener('mousemove', function (e) {\n+    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n+    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n+    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    // });\n+\n+    let card = document.querySelector('.servheroinfo');\n+\n+    card.addEventListener('mousemove', function (e) {\n+        let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n+\n+\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729691577695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,66 +21,23 @@\n     move();\n \n \n     // hero cards - animation\n-    // let card = document.querySelector('.card');\n+    let card = document.querySelector('.card');\n \n-    // document.addEventListener('mousemove', function (e) {\n-    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n-    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n-    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    // });\n-\n-    let card = document.querySelector('.servheroinfo');\n-\n-    card.addEventListener('mousemove', function (e) {\n-        let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    document.addEventListener('mousemove', function (e) {\n+        let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n+        let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     });\n \n+    // let card = document.querySelector('.servheroinfo');\n \n-});\n-// hero bg - animation\n-document.addEventListener('DOMContentLoaded', () => {\n-    const interBubble = document.querySelector('.interactive');\n-    let curX = 0;\n-    let curY = 0;\n-    let tgX = 0;\n-    let tgY = 0;\n-\n-    const move = () => {\n-        curX += (tgX - curX) / 20;\n-        curY += (tgY - curY) / 20;\n-        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-        requestAnimationFrame(move);\n-    };\n-\n-    window.addEventListener('mousemove', (event) => {\n-        tgX = event.clientX;\n-        tgY = event.clientY;\n-    });\n-\n-    move();\n-\n-\n-    // hero cards - animation\n-    // let card = document.querySelector('.card');\n-\n-    // document.addEventListener('mousemove', function (e) {\n-    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n-    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n+    // card.addEventListener('mousemove', function (e) {\n+    //     let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n+    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n-    let card = document.querySelector('.card');\n \n-    card.addEventListener('mousemove', function (e) {\n-        let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    });\n-\n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729691591306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     move();\n \n \n     // hero cards - animation\n-    let card = document.querySelector('.card');\n+    let card = document.querySelector('.servheroinfo');\n \n     document.addEventListener('mousemove', function (e) {\n         let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n         let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n"
                },
                {
                    "date": 1729691624580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,23 +21,23 @@\n     move();\n \n \n     // hero cards - animation\n-    let card = document.querySelector('.servheroinfo');\n-\n-    document.addEventListener('mousemove', function (e) {\n-        let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n-        let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    });\n-\n     // let card = document.querySelector('.servheroinfo');\n \n-    // card.addEventListener('mousemove', function (e) {\n-    //     let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n-    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    // document.addEventListener('mousemove', function (e) {\n+    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n+    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n+    let card = document.querySelector('.services__hero');\n \n+    card.addEventListener('mousemove', function (e) {\n+        let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n+\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729691687486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,15 +29,15 @@\n     //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n-    let card = document.querySelector('.services__hero');\n-\n-    card.addEventListener('mousemove', function (e) {\n-        let rect = card.getBoundingClientRect(); // Отримуємо позицію елемента відносно вікна\n+    let card = document.querySelector('.servheroinfo');\n+    let parent = document.querySelector('.services__hero');\n+    \n+    parent.addEventListener('mousemove', function (e) {\n+        let rect = parent.getBoundingClientRect(); // Отримуємо позицію батьківського елемента\n         let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n         let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     });\n \n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729692416612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,16 +21,9 @@\n     move();\n \n \n     // hero cards - animation\n-    // let card = document.querySelector('.servheroinfo');\n \n-    // document.addEventListener('mousemove', function (e) {\n-    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n-    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n-    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    // });\n-\n     let card = document.querySelector('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n     \n     parent.addEventListener('mousemove', function (e) {\n"
                },
                {
                    "date": 1729692458575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,15 +22,34 @@\n \n \n     // hero cards - animation\n \n+    // let card = document.querySelector('.servheroinfo');\n+    // let parent = document.querySelector('.services__hero');\n+    \n+    // parent.addEventListener('mousemove', function (e) {\n+    //     let rect = parent.getBoundingClientRect(); // Отримуємо позицію батьківського елемента\n+    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    // });\n+\n+\n     let card = document.querySelector('.servheroinfo');\n-    let parent = document.querySelector('.services__hero');\n+let parent = document.querySelector('.services__hero');\n+\n+parent.addEventListener('mousemove', function (e) {\n+    let rect = parent.getBoundingClientRect();\n     \n-    parent.addEventListener('mousemove', function (e) {\n-        let rect = parent.getBoundingClientRect(); // Отримуємо позицію батьківського елемента\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    });\n+    // Розрахунок кута повороту\n+    let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+    let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    \n+    // Обмежуємо кути повороту між -60 і 60 градусами\n+    xAxis = Math.max(-60, Math.min(60, xAxis));\n+    yAxis = Math.max(-60, Math.min(60, yAxis));\n \n+    card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+});\n+\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729692475695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     // hero cards - animation\n \n     // let card = document.querySelector('.servheroinfo');\n     // let parent = document.querySelector('.services__hero');\n-    \n+\n     // parent.addEventListener('mousemove', function (e) {\n     //     let rect = parent.getBoundingClientRect(); // Отримуємо позицію батьківського елемента\n     //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n     //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n@@ -34,22 +34,22 @@\n     // });\n \n \n     let card = document.querySelector('.servheroinfo');\n-let parent = document.querySelector('.services__hero');\n+    let parent = document.querySelector('.services__hero');\n \n-parent.addEventListener('mousemove', function (e) {\n-    let rect = parent.getBoundingClientRect();\n-    \n-    // Розрахунок кута повороту\n-    let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-    let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-    \n-    // Обмежуємо кути повороту між -60 і 60 градусами\n-    xAxis = Math.max(-60, Math.min(60, xAxis));\n-    yAxis = Math.max(-60, Math.min(60, yAxis));\n+    parent.addEventListener('mousemove', function (e) {\n+        let rect = parent.getBoundingClientRect();\n \n-    card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-});\n+        // Розрахунок кута повороту\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n \n+        // Обмежуємо кути повороту між -60 і 60 градусами\n+        xAxis = Math.max(-20, Math.min(20, xAxis));\n+        yAxis = Math.max(-20, Math.min(20, yAxis));\n \n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n+\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729692486177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,10 @@\n         let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n         let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n \n         // Обмежуємо кути повороту між -60 і 60 градусами\n-        xAxis = Math.max(-20, Math.min(20, xAxis));\n-        yAxis = Math.max(-20, Math.min(20, yAxis));\n+        xAxis = Math.max(-40, Math.min(40, xAxis));\n+        yAxis = Math.max(-40, Math.min(40, yAxis));\n \n         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     });\n \n"
                },
                {
                    "date": 1729692555182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,17 @@\n     move();\n \n \n     // hero cards - animation\n+    // let card = document.querySelector('.servheroinfo');\n \n-    // let card = document.querySelector('.servheroinfo');\n+    // document.addEventListener('mousemove', function (e) {\n+    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n+    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n+    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    // });\n+\n+      // let card = document.querySelector('.servheroinfo');\n     // let parent = document.querySelector('.services__hero');\n \n     // parent.addEventListener('mousemove', function (e) {\n     //     let rect = parent.getBoundingClientRect(); // Отримуємо позицію батьківського елемента\n@@ -49,7 +56,5 @@\n         yAxis = Math.max(-40, Math.min(40, yAxis));\n \n         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     });\n-\n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729692604201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,10 @@\n     //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n+\n+\n       // let card = document.querySelector('.servheroinfo');\n     // let parent = document.querySelector('.services__hero');\n \n     // parent.addEventListener('mousemove', function (e) {\n@@ -40,21 +42,19 @@\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n \n-    let card = document.querySelector('.servheroinfo');\n-    let parent = document.querySelector('.services__hero');\n+    // let card = document.querySelector('.servheroinfo');\n+    // let parent = document.querySelector('.services__hero');\n \n-    parent.addEventListener('mousemove', function (e) {\n-        let rect = parent.getBoundingClientRect();\n+    // parent.addEventListener('mousemove', function (e) {\n+    //     let rect = parent.getBoundingClientRect();\n \n-        // Розрахунок кута повороту\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n \n-        // Обмежуємо кути повороту між -60 і 60 градусами\n-        xAxis = Math.max(-40, Math.min(40, xAxis));\n-        yAxis = Math.max(-40, Math.min(40, yAxis));\n+    //     xAxis = Math.max(-40, Math.min(40, xAxis));\n+    //     yAxis = Math.max(-40, Math.min(40, yAxis));\n \n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    });\n+    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    // });\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729693088574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,19 +42,19 @@\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n \n-    // let card = document.querySelector('.servheroinfo');\n-    // let parent = document.querySelector('.services__hero');\n+    let card = document.querySelector('.servheroinfo');\n+    let parent = document.querySelector('.services__hero');\n \n-    // parent.addEventListener('mousemove', function (e) {\n-    //     let rect = parent.getBoundingClientRect();\n+    parent.addEventListener('mousemove', function (e) {\n+        let rect = parent.getBoundingClientRect();\n \n-    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n \n-    //     xAxis = Math.max(-40, Math.min(40, xAxis));\n-    //     yAxis = Math.max(-40, Math.min(40, yAxis));\n+        xAxis = Math.max(-40, Math.min(40, xAxis));\n+        yAxis = Math.max(-40, Math.min(40, yAxis));\n \n-    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    // });\n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729693167371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,19 +42,24 @@\n     //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     // });\n \n \n-    let card = document.querySelector('.servheroinfo');\n+    let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n-\n+    \n     parent.addEventListener('mousemove', function (e) {\n         let rect = parent.getBoundingClientRect();\n-\n+    \n+        // Розраховуємо кути для обертання відносно батьківського блоку\n         let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n         let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-\n-        xAxis = Math.max(-40, Math.min(40, xAxis));\n-        yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    \n+        // Обмежуємо кути повороту між -60 і 60 градусами\n+        xAxis = Math.max(-60, Math.min(60, xAxis));\n+        yAxis = Math.max(-60, Math.min(60, yAxis));\n+    \n+        // Для кожного елемента .servheroinfo застосовуємо стиль transform\n+        cards.forEach(card => {\n+            card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+        });\n     });\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729693189098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,10 @@\n         let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n         let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n     \n         // Обмежуємо кути повороту між -60 і 60 градусами\n-        xAxis = Math.max(-60, Math.min(60, xAxis));\n-        yAxis = Math.max(-60, Math.min(60, yAxis));\n+        xAxis = Math.max(-40, Math.min(40, xAxis));\n+        yAxis = Math.max(-40, Math.min(40, yAxis));\n     \n         // Для кожного елемента .servheroinfo застосовуємо стиль transform\n         cards.forEach(card => {\n             card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n"
                },
                {
                    "date": 1729693261207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,29 +21,9 @@\n     move();\n \n \n     // hero cards - animation\n-    // let card = document.querySelector('.servheroinfo');\n \n-    // document.addEventListener('mousemove', function (e) {\n-    //     let xAxis = (window.innerWidth / 2 - e.pageX) / 10;\n-    //     let yAxis = (window.innerHeight / 2 - e.pageY) / 5;\n-    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    // });\n-\n-\n-\n-      // let card = document.querySelector('.servheroinfo');\n-    // let parent = document.querySelector('.services__hero');\n-\n-    // parent.addEventListener('mousemove', function (e) {\n-    //     let rect = parent.getBoundingClientRect(); // Отримуємо позицію батьківського елемента\n-    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-    //     card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    // });\n-\n-\n     let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n     \n     parent.addEventListener('mousemove', function (e) {\n"
                },
                {
                    "date": 1729693276157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+// hero bg - animation\n+document.addEventListener('DOMContentLoaded', () => {\n+    const interBubble = document.querySelector('.interactive');\n+    let curX = 0;\n+    let curY = 0;\n+    let tgX = 0;\n+    let tgY = 0;\n+\n+    const move = () => {\n+        curX += (tgX - curX) / 20;\n+        curY += (tgY - curY) / 20;\n+        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+        requestAnimationFrame(move);\n+    };\n+\n+    window.addEventListener('mousemove', (event) => {\n+        tgX = event.clientX;\n+        tgY = event.clientY;\n+    });\n+\n+    move();\n+\n+\n+    // hero cards - animation\n+\n+    // let cards = document.querySelectorAll('.servheroinfo');\n+    // let parent = document.querySelector('.services__hero');\n+    \n+    // parent.addEventListener('mousemove', function (e) {\n+    //     let rect = parent.getBoundingClientRect();\n+    \n+    //     // Розраховуємо кути для обертання відносно батьківського блоку\n+    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    \n+    //     // Обмежуємо кути повороту між -60 і 60 градусами\n+    //     xAxis = Math.max(-40, Math.min(40, xAxis));\n+    //     yAxis = Math.max(-40, Math.min(40, yAxis));\n+    \n+    //     // Для кожного елемента .servheroinfo застосовуємо стиль transform\n+    //     cards.forEach(card => {\n+    //         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    //     });\n+    // });\n+\n+\n+    let cards = document.querySelectorAll('.servheroinfo');\n+let parent = document.querySelector('.services__hero');\n+\n+parent.addEventListener('mousemove', function (e) {\n+    let parentRect = parent.getBoundingClientRect(); // Отримуємо положення батьківського блоку\n+\n+    cards.forEach(card => {\n+        let cardRect = card.getBoundingClientRect(); // Отримуємо положення кожного блоку .servheroinfo\n+        \n+        // Розрахунок кута повороту для кожного блоку\n+        let xAxis = (cardRect.width / 2 - (e.clientX - cardRect.left)) / 10;\n+        let yAxis = (cardRect.height / 2 - (e.clientY - cardRect.top)) / 5;\n+\n+        // Обмежуємо кути повороту між -60 і 60 градусами\n+        xAxis = Math.max(-60, Math.min(60, xAxis));\n+        yAxis = Math.max(-60, Math.min(60, yAxis));\n+\n+        // Застосовуємо поворот для кожного блоку\n+        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    });\n+});\n+\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729693295662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,78 +22,9 @@\n \n \n     // hero cards - animation\n \n-    // let cards = document.querySelectorAll('.servheroinfo');\n-    // let parent = document.querySelector('.services__hero');\n-    \n-    // parent.addEventListener('mousemove', function (e) {\n-    //     let rect = parent.getBoundingClientRect();\n-    \n-    //     // Розраховуємо кути для обертання відносно батьківського блоку\n-    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-    \n-    //     // Обмежуємо кути повороту між -60 і 60 градусами\n-    //     xAxis = Math.max(-40, Math.min(40, xAxis));\n-    //     yAxis = Math.max(-40, Math.min(40, yAxis));\n-    \n-    //     // Для кожного елемента .servheroinfo застосовуємо стиль transform\n-    //     cards.forEach(card => {\n-    //         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    //     });\n-    // });\n-\n-\n     let cards = document.querySelectorAll('.servheroinfo');\n-let parent = document.querySelector('.services__hero');\n-\n-parent.addEventListener('mousemove', function (e) {\n-    let parentRect = parent.getBoundingClientRect(); // Отримуємо положення батьківського блоку\n-\n-    cards.forEach(card => {\n-        let cardRect = card.getBoundingClientRect(); // Отримуємо положення кожного блоку .servheroinfo\n-        \n-        // Розрахунок кута повороту для кожного блоку\n-        let xAxis = (cardRect.width / 2 - (e.clientX - cardRect.left)) / 10;\n-        let yAxis = (cardRect.height / 2 - (e.clientY - cardRect.top)) / 5;\n-\n-        // Обмежуємо кути повороту між -60 і 60 градусами\n-        xAxis = Math.max(-60, Math.min(60, xAxis));\n-        yAxis = Math.max(-60, Math.min(60, yAxis));\n-\n-        // Застосовуємо поворот для кожного блоку\n-        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    });\n-});\n-\n-});\n-// hero bg - animation\n-document.addEventListener('DOMContentLoaded', () => {\n-    const interBubble = document.querySelector('.interactive');\n-    let curX = 0;\n-    let curY = 0;\n-    let tgX = 0;\n-    let tgY = 0;\n-\n-    const move = () => {\n-        curX += (tgX - curX) / 20;\n-        curY += (tgY - curY) / 20;\n-        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-        requestAnimationFrame(move);\n-    };\n-\n-    window.addEventListener('mousemove', (event) => {\n-        tgX = event.clientX;\n-        tgY = event.clientY;\n-    });\n-\n-    move();\n-\n-\n-    // hero cards - animation\n-\n-    let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n     \n     parent.addEventListener('mousemove', function (e) {\n         let rect = parent.getBoundingClientRect();\n"
                },
                {
                    "date": 1729693360532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,24 +22,28 @@\n \n \n     // hero cards - animation\n \n-    let cards = document.querySelectorAll('.servheroinfo');\n-    let parent = document.querySelector('.services__hero');\n+    // let cards = document.querySelectorAll('.servheroinfo');\n+    // let parent = document.querySelector('.services__hero');\n     \n-    parent.addEventListener('mousemove', function (e) {\n-        let rect = parent.getBoundingClientRect();\n+    // parent.addEventListener('mousemove', function (e) {\n+    //     let rect = parent.getBoundingClientRect();\n     \n-        // Розраховуємо кути для обертання відносно батьківського блоку\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+    //     // Розраховуємо кути для обертання відносно батьківського блоку\n+    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n     \n-        // Обмежуємо кути повороту між -60 і 60 градусами\n-        xAxis = Math.max(-40, Math.min(40, xAxis));\n-        yAxis = Math.max(-40, Math.min(40, yAxis));\n+    //     // Обмежуємо кути повороту між -60 і 60 градусами\n+    //     xAxis = Math.max(-40, Math.min(40, xAxis));\n+    //     yAxis = Math.max(-40, Math.min(40, yAxis));\n     \n-        // Для кожного елемента .servheroinfo застосовуємо стиль transform\n-        cards.forEach(card => {\n-            card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-        });\n-    });\n+    //     // Для кожного елемента .servheroinfo застосовуємо стиль transform\n+    //     cards.forEach(card => {\n+    //         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+    //     });\n+    // });\n+\n+\n+\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729693378165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,37 @@\n     //         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n     //     });\n     // });\n \n+    let cards = document.querySelectorAll('.servheroinfo');\n+    let parent = document.querySelector('.services__hero');\n+    \n+    parent.addEventListener('mousemove', function (e) {\n+        let parentRect = parent.getBoundingClientRect();\n+    \n+        cards.forEach(card => {\n+            let cardRect = card.getBoundingClientRect();\n+            \n+            // Розрахунок кута повороту для кожного блоку\n+            let xAxis = (cardRect.width / 2 - (e.clientX - cardRect.left)) / 10;\n+            let yAxis = (cardRect.height / 2 - (e.clientY - cardRect.top)) / 5;\n+            \n+            // Генерація невеликого зсуву в межах 5-10 градусів\n+            let randomOffsetX = Math.random() * 5 + 5; // від 5 до 10 градусів\n+            let randomOffsetY = Math.random() * 5 + 5;\n+    \n+            // Додаємо випадкові зсуви до кожного блоку\n+            xAxis += randomOffsetX;\n+            yAxis += randomOffsetY;\n+    \n+            // Обмежуємо кути повороту між -60 і 60 градусами\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+    \n+            // Застосовуємо поворот для кожного блоку\n+            card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+        });\n+    });\n+    \n \n \n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729693391373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,57 +22,28 @@\n \n \n     // hero cards - animation\n \n-    // let cards = document.querySelectorAll('.servheroinfo');\n-    // let parent = document.querySelector('.services__hero');\n-    \n-    // parent.addEventListener('mousemove', function (e) {\n-    //     let rect = parent.getBoundingClientRect();\n-    \n-    //     // Розраховуємо кути для обертання відносно батьківського блоку\n-    //     let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-    //     let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-    \n-    //     // Обмежуємо кути повороту між -60 і 60 градусами\n-    //     xAxis = Math.max(-40, Math.min(40, xAxis));\n-    //     yAxis = Math.max(-40, Math.min(40, yAxis));\n-    \n-    //     // Для кожного елемента .servheroinfo застосовуємо стиль transform\n-    //     cards.forEach(card => {\n-    //         card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-    //     });\n-    // });\n-\n     let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n     \n     parent.addEventListener('mousemove', function (e) {\n-        let parentRect = parent.getBoundingClientRect();\n+        let rect = parent.getBoundingClientRect();\n     \n-        cards.forEach(card => {\n-            let cardRect = card.getBoundingClientRect();\n-            \n-            // Розрахунок кута повороту для кожного блоку\n-            let xAxis = (cardRect.width / 2 - (e.clientX - cardRect.left)) / 10;\n-            let yAxis = (cardRect.height / 2 - (e.clientY - cardRect.top)) / 5;\n-            \n-            // Генерація невеликого зсуву в межах 5-10 градусів\n-            let randomOffsetX = Math.random() * 5 + 5; // від 5 до 10 градусів\n-            let randomOffsetY = Math.random() * 5 + 5;\n+        // Розраховуємо кути для обертання відносно батьківського блоку\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n     \n-            // Додаємо випадкові зсуви до кожного блоку\n-            xAxis += randomOffsetX;\n-            yAxis += randomOffsetY;\n+        // Обмежуємо кути повороту між -60 і 60 градусами\n+        xAxis = Math.max(-40, Math.min(40, xAxis));\n+        yAxis = Math.max(-40, Math.min(40, yAxis));\n     \n-            // Обмежуємо кути повороту між -60 і 60 градусами\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-    \n-            // Застосовуємо поворот для кожного блоку\n+        // Для кожного елемента .servheroinfo застосовуємо стиль transform\n+        cards.forEach(card => {\n             card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n         });\n     });\n-    \n \n \n+\n+    \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696043767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,14 @@\n             card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n         });\n     });\n \n+    // Success stories\n+    const cards = document.querySelectorAll('.card');\n \n+cards.forEach((card, index) => {\n+  card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+});\n \n+\n     \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696067958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,32 +24,32 @@\n     // hero cards - animation\n \n     let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n-    \n+\n     parent.addEventListener('mousemove', function (e) {\n         let rect = parent.getBoundingClientRect();\n-    \n+\n         // Розраховуємо кути для обертання відносно батьківського блоку\n         let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n         let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n-    \n+\n         // Обмежуємо кути повороту між -60 і 60 градусами\n         xAxis = Math.max(-40, Math.min(40, xAxis));\n         yAxis = Math.max(-40, Math.min(40, yAxis));\n-    \n+\n         // Для кожного елемента .servheroinfo застосовуємо стиль transform\n         cards.forEach(card => {\n             card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n         });\n     });\n \n     // Success stories\n-    const cards = document.querySelectorAll('.card');\n+    const cardsbox = document.querySelectorAll('.card');\n \n-cards.forEach((card, index) => {\n-  card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-});\n+    cardsbox.forEach((card, index) => {\n+        card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+    });\n \n \n-    \n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696166929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,6 +50,32 @@\n         card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n     });\n \n \n+    document.addEventListener('DOMContentLoaded', () => {\n+        const cards = document.querySelectorAll('.card');\n+        \n+        let observer = new IntersectionObserver((entries) => {\n+          entries.forEach(entry => {\n+            const card = entry.target;\n+            if (entry.isIntersecting) {\n+              // Card is fully visible, keep it at full size\n+              card.style.transform = `scale(1)`;\n+            } else {\n+              // Card starts leaving the viewport, shrink it\n+              let rect = card.getBoundingClientRect();\n+              const windowHeight = window.innerHeight;\n+              if (rect.top < windowHeight) {\n+                let scale = 1 - ((windowHeight - rect.top) / windowHeight) * 0.2; // Shrinks to 0.8\n+                card.style.transform = `scale(${scale})`;\n+              }\n+            }\n+          });\n+        }, { threshold: 0.5 }); // Observe when 50% of the card is in view\n+        \n+        cards.forEach(card => {\n+          observer.observe(card);\n+        });\n+      });\n+      \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696813183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n     parent.addEventListener('mousemove', function (e) {\n         let rect = parent.getBoundingClientRect();\n \n         // Розраховуємо кути для обертання відносно батьківського блоку\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 10;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 5;\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 2;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 2;\n \n         // Обмежуємо кути повороту між -60 і 60 градусами\n         xAxis = Math.max(-40, Math.min(40, xAxis));\n         yAxis = Math.max(-40, Math.min(40, yAxis));\n"
                },
                {
                    "date": 1729696821241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n     parent.addEventListener('mousemove', function (e) {\n         let rect = parent.getBoundingClientRect();\n \n         // Розраховуємо кути для обертання відносно батьківського блоку\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 2;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 2;\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n \n         // Обмежуємо кути повороту між -60 і 60 градусами\n         xAxis = Math.max(-40, Math.min(40, xAxis));\n         yAxis = Math.max(-40, Math.min(40, yAxis));\n"
                },
                {
                    "date": 1729696855711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,17 +28,14 @@\n \n     parent.addEventListener('mousemove', function (e) {\n         let rect = parent.getBoundingClientRect();\n \n-        // Розраховуємо кути для обертання відносно батьківського блоку\n         let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n         let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n \n-        // Обмежуємо кути повороту між -60 і 60 градусами\n         xAxis = Math.max(-40, Math.min(40, xAxis));\n         yAxis = Math.max(-40, Math.min(40, yAxis));\n \n-        // Для кожного елемента .servheroinfo застосовуємо стиль transform\n         cards.forEach(card => {\n             card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n         });\n     });\n@@ -46,9 +43,9 @@\n     // Success stories\n     const cardsbox = document.querySelectorAll('.card');\n \n     cardsbox.forEach((card, index) => {\n-        card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+        card.style.zIndex = index + 1; \n     });\n \n \n     document.addEventListener('DOMContentLoaded', () => {\n"
                },
                {
                    "date": 1729696860902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,36 +43,35 @@\n     // Success stories\n     const cardsbox = document.querySelectorAll('.card');\n \n     cardsbox.forEach((card, index) => {\n-        card.style.zIndex = index + 1; \n+        card.style.zIndex = index + 1;\n     });\n \n-\n     document.addEventListener('DOMContentLoaded', () => {\n         const cards = document.querySelectorAll('.card');\n-        \n+\n         let observer = new IntersectionObserver((entries) => {\n-          entries.forEach(entry => {\n-            const card = entry.target;\n-            if (entry.isIntersecting) {\n-              // Card is fully visible, keep it at full size\n-              card.style.transform = `scale(1)`;\n-            } else {\n-              // Card starts leaving the viewport, shrink it\n-              let rect = card.getBoundingClientRect();\n-              const windowHeight = window.innerHeight;\n-              if (rect.top < windowHeight) {\n-                let scale = 1 - ((windowHeight - rect.top) / windowHeight) * 0.2; // Shrinks to 0.8\n-                card.style.transform = `scale(${scale})`;\n-              }\n-            }\n-          });\n+            entries.forEach(entry => {\n+                const card = entry.target;\n+                if (entry.isIntersecting) {\n+                    // Card is fully visible, keep it at full size\n+                    card.style.transform = `scale(1)`;\n+                } else {\n+                    // Card starts leaving the viewport, shrink it\n+                    let rect = card.getBoundingClientRect();\n+                    const windowHeight = window.innerHeight;\n+                    if (rect.top < windowHeight) {\n+                        let scale = 1 - ((windowHeight - rect.top) / windowHeight) * 0.2; // Shrinks to 0.8\n+                        card.style.transform = `scale(${scale})`;\n+                    }\n+                }\n+            });\n         }, { threshold: 0.5 }); // Observe when 50% of the card is in view\n-        \n+\n         cards.forEach(card => {\n-          observer.observe(card);\n+            observer.observe(card);\n         });\n-      });\n-      \n+    });\n \n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696892187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,13 +40,13 @@\n         });\n     });\n \n     // Success stories\n-    const cardsbox = document.querySelectorAll('.card');\n+    // const cardsbox = document.querySelectorAll('.card');\n \n-    cardsbox.forEach((card, index) => {\n-        card.style.zIndex = index + 1;\n-    });\n+    // cardsbox.forEach((card, index) => {\n+    //     card.style.zIndex = index + 1;\n+    // });\n \n     document.addEventListener('DOMContentLoaded', () => {\n         const cards = document.querySelectorAll('.card');\n \n"
                },
                {
                    "date": 1729696934039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,38 +40,38 @@\n         });\n     });\n \n     // Success stories\n-    // const cardsbox = document.querySelectorAll('.card');\n+    const cardsbox = document.querySelectorAll('.card');\n \n-    // cardsbox.forEach((card, index) => {\n-    //     card.style.zIndex = index + 1;\n-    // });\n+    cardsbox.forEach((card, index) => {\n+        card.style.zIndex = index + 1;\n+    });\n \n-    document.addEventListener('DOMContentLoaded', () => {\n-        const cards = document.querySelectorAll('.card');\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const cards = document.querySelectorAll('.card');\n \n-        let observer = new IntersectionObserver((entries) => {\n-            entries.forEach(entry => {\n-                const card = entry.target;\n-                if (entry.isIntersecting) {\n-                    // Card is fully visible, keep it at full size\n-                    card.style.transform = `scale(1)`;\n-                } else {\n-                    // Card starts leaving the viewport, shrink it\n-                    let rect = card.getBoundingClientRect();\n-                    const windowHeight = window.innerHeight;\n-                    if (rect.top < windowHeight) {\n-                        let scale = 1 - ((windowHeight - rect.top) / windowHeight) * 0.2; // Shrinks to 0.8\n-                        card.style.transform = `scale(${scale})`;\n-                    }\n-                }\n-            });\n-        }, { threshold: 0.5 }); // Observe when 50% of the card is in view\n+    //     let observer = new IntersectionObserver((entries) => {\n+    //         entries.forEach(entry => {\n+    //             const card = entry.target;\n+    //             if (entry.isIntersecting) {\n+    //                 // Card is fully visible, keep it at full size\n+    //                 card.style.transform = `scale(1)`;\n+    //             } else {\n+    //                 // Card starts leaving the viewport, shrink it\n+    //                 let rect = card.getBoundingClientRect();\n+    //                 const windowHeight = window.innerHeight;\n+    //                 if (rect.top < windowHeight) {\n+    //                     let scale = 1 - ((windowHeight - rect.top) / windowHeight) * 0.2; // Shrinks to 0.8\n+    //                     card.style.transform = `scale(${scale})`;\n+    //                 }\n+    //             }\n+    //         });\n+    //     }, { threshold: 0.5 }); // Observe when 50% of the card is in view\n \n-        cards.forEach(card => {\n-            observer.observe(card);\n-        });\n-    });\n+    //     cards.forEach(card => {\n+    //         observer.observe(card);\n+    //     });\n+    // });\n \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696952061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,32 +46,7 @@\n     cardsbox.forEach((card, index) => {\n         card.style.zIndex = index + 1;\n     });\n \n-    // document.addEventListener('DOMContentLoaded', () => {\n-    //     const cards = document.querySelectorAll('.card');\n+   \n \n-    //     let observer = new IntersectionObserver((entries) => {\n-    //         entries.forEach(entry => {\n-    //             const card = entry.target;\n-    //             if (entry.isIntersecting) {\n-    //                 // Card is fully visible, keep it at full size\n-    //                 card.style.transform = `scale(1)`;\n-    //             } else {\n-    //                 // Card starts leaving the viewport, shrink it\n-    //                 let rect = card.getBoundingClientRect();\n-    //                 const windowHeight = window.innerHeight;\n-    //                 if (rect.top < windowHeight) {\n-    //                     let scale = 1 - ((windowHeight - rect.top) / windowHeight) * 0.2; // Shrinks to 0.8\n-    //                     card.style.transform = `scale(${scale})`;\n-    //                 }\n-    //             }\n-    //         });\n-    //     }, { threshold: 0.5 }); // Observe when 50% of the card is in view\n-\n-    //     cards.forEach(card => {\n-    //         observer.observe(card);\n-    //     });\n-    // });\n-\n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729696995553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,13 +40,13 @@\n         });\n     });\n \n     // Success stories\n-    const cardsbox = document.querySelectorAll('.card');\n+    const cards = document.querySelectorAll('.card');\n \n-    cardsbox.forEach((card, index) => {\n-        card.style.zIndex = index + 1;\n-    });\n-\n+cards.forEach((card, index) => {\n+  card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+  card.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+});\n    \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729697031447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,13 +40,13 @@\n         });\n     });\n \n     // Success stories\n-    const cards = document.querySelectorAll('.card');\n+    const cardsbox = document.querySelectorAll('.card');\n \n-cards.forEach((card, index) => {\n-  card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-  card.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-});\n-   \n+    cardsbox.forEach((card, index) => {\n+        cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+        cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+    });\n \n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729697044359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n     // Success stories\n     const cardsbox = document.querySelectorAll('.card');\n \n-    cardsbox.forEach((card, index) => {\n+    cardsbox.forEach((cardsbox, index) => {\n         cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     });\n \n"
                },
                {
                    "date": 1729775443438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,6 +47,7 @@\n         cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     });\n \n+    // testimonials\n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729775516261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,6 +48,45 @@\n         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     });\n \n     // testimonials\n+    var swiper = new Swiper(\".brandsslider\", {\n+        slidesPerView: \"auto\",\n+        spaceBetween: 20,\n+        loop: true,\n+        speed: 6000,\n+        allowTouchMove: false,\n+        autoplay: {\n+            delay: 1,\n+            disableOnInteraction: false,\n+        },\n+    });\n \n+\n+\n+\n+\n+\n+\n+\n+\n+    var $swiper = $(\".swiper-container\");\n+    var $bottomSlide = null; // Slide whose content gets 'extracted' and placed\n+    // into a fixed position for animation purposes\n+    var $bottomSlideContent = null; // Slide content that gets passed between the\n+    // panning slide stack and the position 'behind'\n+    // the stack, needed for correct animation style\n+\n+    var mySwiper = new Swiper(\".swiper-container\", {\n+        spaceBetween: 1,\n+        slidesPerView: 3,\n+        centeredSlides: true,\n+        roundLengths: true,\n+        loop: true,\n+        loopAdditionalSlides: 30,\n+        navigation: {\n+            nextEl: \".swiper-button-next\",\n+            prevEl: \".swiper-button-prev\"\n+        }\n+    });\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729775631958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,28 +48,24 @@\n         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     });\n \n     // testimonials\n-    var swiper = new Swiper(\".brandsslider\", {\n-        slidesPerView: \"auto\",\n-        spaceBetween: 20,\n-        loop: true,\n-        speed: 6000,\n-        allowTouchMove: false,\n-        autoplay: {\n-            delay: 1,\n-            disableOnInteraction: false,\n+    var swiper = new Swiper(\".testim-centered\", {\n+        slidesPerView: 4,\n+        spaceBetween: 30,\n+        centeredSlides: true,\n+        pagination: {\n+          el: \".swiper-pagination\",\n+          clickable: true,\n         },\n-    });\n+      });\n \n \n \n \n \n \n \n-\n-\n     var $swiper = $(\".swiper-container\");\n     var $bottomSlide = null; // Slide whose content gets 'extracted' and placed\n     // into a fixed position for animation purposes\n     var $bottomSlideContent = null; // Slide content that gets passed between the\n"
                },
                {
                    "date": 1729775638197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     });\n \n     // testimonials\n     var swiper = new Swiper(\".testim-centered\", {\n-        slidesPerView: 4,\n+        slidesPerView: 3,\n         spaceBetween: 30,\n         centeredSlides: true,\n         pagination: {\n           el: \".swiper-pagination\",\n"
                },
                {
                    "date": 1729775719880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,37 +52,16 @@\n     var swiper = new Swiper(\".testim-centered\", {\n         slidesPerView: 3,\n         spaceBetween: 30,\n         centeredSlides: true,\n-        pagination: {\n-          el: \".swiper-pagination\",\n-          clickable: true,\n-        },\n+        loop: true,\n+        \n       });\n \n \n \n \n \n \n \n-    var $swiper = $(\".swiper-container\");\n-    var $bottomSlide = null; // Slide whose content gets 'extracted' and placed\n-    // into a fixed position for animation purposes\n-    var $bottomSlideContent = null; // Slide content that gets passed between the\n-    // panning slide stack and the position 'behind'\n-    // the stack, needed for correct animation style\n \n-    var mySwiper = new Swiper(\".swiper-container\", {\n-        spaceBetween: 1,\n-        slidesPerView: 3,\n-        centeredSlides: true,\n-        roundLengths: true,\n-        loop: true,\n-        loopAdditionalSlides: 30,\n-        navigation: {\n-            nextEl: \".swiper-button-next\",\n-            prevEl: \".swiper-button-prev\"\n-        }\n-    });\n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729775744635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n     // testimonials\n     var swiper = new Swiper(\".testim-centered\", {\n         slidesPerView: 3,\n-        spaceBetween: 30,\n+        spaceBetween: 20,\n         centeredSlides: true,\n         loop: true,\n         \n       });\n"
                },
                {
                    "date": 1729775749992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n     // testimonials\n     var swiper = new Swiper(\".testim-centered\", {\n         slidesPerView: 3,\n-        spaceBetween: 20,\n+        spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n         \n       });\n"
                },
                {
                    "date": 1729775776908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     });\n \n     // testimonials\n     var swiper = new Swiper(\".testim-centered\", {\n-        slidesPerView: 3,\n+        slidesPerView: 2.6,\n         spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n         \n"
                },
                {
                    "date": 1729775795309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     });\n \n     // testimonials\n     var swiper = new Swiper(\".testim-centered\", {\n-        slidesPerView: 2.6,\n+        slidesPerView: 2.4,\n         spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n         \n"
                },
                {
                    "date": 1729777670517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,12 @@\n         spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n         \n+        navigation: {\n+            nextEl: \".swiper-button-next\",\n+            prevEl: \".swiper-button-prev\",\n+          },\n       });\n \n \n \n"
                },
                {
                    "date": 1729777784206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,14 @@\n         slidesPerView: 2.4,\n         spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n-        \n+\n         navigation: {\n-            nextEl: \".swiper-button-next\",\n-            prevEl: \".swiper-button-prev\",\n-          },\n-      });\n+            nextEl: \".swiper-button-next-t\",\n+            prevEl: \".swiper-button-prev-t\",\n+        },\n+    });\n \n \n \n \n"
                },
                {
                    "date": 1729778389382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n         slidesPerView: 2.4,\n         spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n+        speed: 6000,\n \n         navigation: {\n             nextEl: \".swiper-button-next-t\",\n             prevEl: \".swiper-button-prev-t\",\n"
                },
                {
                    "date": 1729778398931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n         slidesPerView: 2.4,\n         spaceBetween: 0,\n         centeredSlides: true,\n         loop: true,\n-        speed: 6000,\n+        speed: 1000,\n \n         navigation: {\n             nextEl: \".swiper-button-next-t\",\n             prevEl: \".swiper-button-prev-t\",\n"
                },
                {
                    "date": 1729847218455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,12 +61,49 @@\n             prevEl: \".swiper-button-prev-t\",\n         },\n     });\n \n+    // Auto tabs\n+    var currentIndex = 0;\n+    var totalTabs = $('.autotabs ul li').length;\n+    var interval;\n \n+    // Function to switch tabs\n+    function switchTab(index) {\n+        // Активний пункт меню\n+        $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n \n+        // Зображення\n+        $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n \n+        // Тексти\n+        $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+    }\n \n+    // Автоматичне перемикання табів кожні 5 секунд\n+    function startAutoSwitch() {\n+        interval = setInterval(function () {\n+            currentIndex = (currentIndex + 1) % totalTabs;\n+            switchTab(currentIndex);\n+        }, 5000);\n+    }\n \n+    // Старт автоперемикання\n+    startAutoSwitch();\n \n+    // Зупинка автоперемикання при кліку на вкладку\n+    $('.autotabs ul li a').click(function (e) {\n+        e.preventDefault();\n+        clearInterval(interval);\n+        currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+        switchTab(currentIndex);\n+    });\n \n+    // Старт зі спочатку\n+    switchTab(currentIndex);\n+\n+\n+\n+\n+\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729849761333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+// hero bg - animation\n+document.addEventListener('DOMContentLoaded', () => {\n+    const interBubble = document.querySelector('.interactive');\n+    let curX = 0;\n+    let curY = 0;\n+    let tgX = 0;\n+    let tgY = 0;\n+\n+    const move = () => {\n+        curX += (tgX - curX) / 20;\n+        curY += (tgY - curY) / 20;\n+        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+        requestAnimationFrame(move);\n+    };\n+\n+    window.addEventListener('mousemove', (event) => {\n+        tgX = event.clientX;\n+        tgY = event.clientY;\n+    });\n+\n+    move();\n+\n+\n+    // hero cards - animation\n+\n+    let cards = document.querySelectorAll('.servheroinfo');\n+    let parent = document.querySelector('.services__hero');\n+\n+    parent.addEventListener('mousemove', function (e) {\n+        let rect = parent.getBoundingClientRect();\n+\n+        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+        xAxis = Math.max(-40, Math.min(40, xAxis));\n+        yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+        cards.forEach(card => {\n+            card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+        });\n+    });\n+\n+    // Success stories\n+    const cardsbox = document.querySelectorAll('.card');\n+\n+    cardsbox.forEach((cardsbox, index) => {\n+        cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+        cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+    });\n+\n+    // testimonials\n+    var swiper = new Swiper(\".testim-centered\", {\n+        slidesPerView: 2.4,\n+        spaceBetween: 0,\n+        centeredSlides: true,\n+        loop: true,\n+        speed: 1000,\n+\n+        navigation: {\n+            nextEl: \".swiper-button-next-t\",\n+            prevEl: \".swiper-button-prev-t\",\n+        },\n+    });\n+\n+    // Auto tabs\n+    var currentIndex = 0;\n+    var totalTabs = $('.autotabs ul li').length;\n+    var interval;\n+\n+    // Function to switch tabs\n+    function switchTab(index) {\n+        // Активний пункт меню\n+        $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+        // Зображення\n+        $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+        // Тексти\n+        $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+    }\n+\n+    // Автоматичне перемикання табів кожні 5 секунд\n+    function startAutoSwitch() {\n+        interval = setInterval(function () {\n+            currentIndex = (currentIndex + 1) % totalTabs;\n+            switchTab(currentIndex);\n+        }, 5000);\n+    }\n+\n+    // Старт автоперемикання\n+    startAutoSwitch();\n+\n+    // Зупинка автоперемикання при кліку на вкладку\n+    $('.autotabs ul li a').click(function (e) {\n+        e.preventDefault();\n+        clearInterval(interval);\n+        currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+        switchTab(currentIndex);\n+    });\n+\n+    // Старт зі спочатку\n+    switchTab(currentIndex);\n+\n+    // BANER SLIDER\n+    var swiper = new Swiper(\".mySwiper\", {\n+        pagination: {\n+            el: \".swiper-pagination\",\n+        },\n+    });\n+\n+\n+\n+\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729849770651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \n     // Старт зі спочатку\n     switchTab(currentIndex);\n \n-    // BANER SLIDER\n+    // ----------------------BANER SLIDER----------------------\n     var swiper = new Swiper(\".mySwiper\", {\n         pagination: {\n             el: \".swiper-pagination\",\n         },\n@@ -110,114 +110,5 @@\n \n \n \n \n-});\n-// hero bg - animation\n-document.addEventListener('DOMContentLoaded', () => {\n-    const interBubble = document.querySelector('.interactive');\n-    let curX = 0;\n-    let curY = 0;\n-    let tgX = 0;\n-    let tgY = 0;\n-\n-    const move = () => {\n-        curX += (tgX - curX) / 20;\n-        curY += (tgY - curY) / 20;\n-        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-        requestAnimationFrame(move);\n-    };\n-\n-    window.addEventListener('mousemove', (event) => {\n-        tgX = event.clientX;\n-        tgY = event.clientY;\n-    });\n-\n-    move();\n-\n-\n-    // hero cards - animation\n-\n-    let cards = document.querySelectorAll('.servheroinfo');\n-    let parent = document.querySelector('.services__hero');\n-\n-    parent.addEventListener('mousemove', function (e) {\n-        let rect = parent.getBoundingClientRect();\n-\n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-        xAxis = Math.max(-40, Math.min(40, xAxis));\n-        yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-        cards.forEach(card => {\n-            card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-        });\n-    });\n-\n-    // Success stories\n-    const cardsbox = document.querySelectorAll('.card');\n-\n-    cardsbox.forEach((cardsbox, index) => {\n-        cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-        cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-    });\n-\n-    // testimonials\n-    var swiper = new Swiper(\".testim-centered\", {\n-        slidesPerView: 2.4,\n-        spaceBetween: 0,\n-        centeredSlides: true,\n-        loop: true,\n-        speed: 1000,\n-\n-        navigation: {\n-            nextEl: \".swiper-button-next-t\",\n-            prevEl: \".swiper-button-prev-t\",\n-        },\n-    });\n-\n-    // Auto tabs\n-    var currentIndex = 0;\n-    var totalTabs = $('.autotabs ul li').length;\n-    var interval;\n-\n-    // Function to switch tabs\n-    function switchTab(index) {\n-        // Активний пункт меню\n-        $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-        // Зображення\n-        $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-        // Тексти\n-        $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-    }\n-\n-    // Автоматичне перемикання табів кожні 5 секунд\n-    function startAutoSwitch() {\n-        interval = setInterval(function () {\n-            currentIndex = (currentIndex + 1) % totalTabs;\n-            switchTab(currentIndex);\n-        }, 5000);\n-    }\n-\n-    // Старт автоперемикання\n-    startAutoSwitch();\n-\n-    // Зупинка автоперемикання при кліку на вкладку\n-    $('.autotabs ul li a').click(function (e) {\n-        e.preventDefault();\n-        clearInterval(interval);\n-        currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-        switchTab(currentIndex);\n-    });\n-\n-    // Старт зі спочатку\n-    switchTab(currentIndex);\n-\n-\n-\n-\n-\n-\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729849776395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             prevEl: \".swiper-button-prev-t\",\n         },\n     });\n \n-    // Auto tabs\n+    // ----------------------Auto tabs----------------------\n     var currentIndex = 0;\n     var totalTabs = $('.autotabs ul li').length;\n     var interval;\n \n"
                },
                {
                    "date": 1729849787906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,17 +39,17 @@\n             card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n         });\n     });\n \n-    // Success stories\n+    // ----------------------Success stories----------------------\n     const cardsbox = document.querySelectorAll('.card');\n \n     cardsbox.forEach((cardsbox, index) => {\n         cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     });\n \n-    // testimonials\n+    // ----------------------testimonials----------------------\n     var swiper = new Swiper(\".testim-centered\", {\n         slidesPerView: 2.4,\n         spaceBetween: 0,\n         centeredSlides: true,\n"
                },
                {
                    "date": 1729849795975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-// hero bg - animation\n+// ----------------------hero bg - animation----------------------\n document.addEventListener('DOMContentLoaded', () => {\n     const interBubble = document.querySelector('.interactive');\n     let curX = 0;\n     let curY = 0;\n@@ -20,9 +20,9 @@\n \n     move();\n \n \n-    // hero cards - animation\n+    // ----------------------hero cards - animation----------------------\n \n     let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n \n"
                },
                {
                    "date": 1729849820532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,16 @@\n \n     move();\n \n \n+\n+\n+\n+\n+\n+});\n+\n+$(document).ready(function () {\n     // ----------------------hero cards - animation----------------------\n \n     let cards = document.querySelectorAll('.servheroinfo');\n     let parent = document.querySelector('.services__hero');\n@@ -106,9 +114,5 @@\n         pagination: {\n             el: \".swiper-pagination\",\n         },\n     });\n-\n-\n-\n-\n-});\n\\ No newline at end of file\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729849867628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n     // Старт зі спочатку\n     switchTab(currentIndex);\n \n     // ----------------------BANER SLIDER----------------------\n-    var swiper = new Swiper(\".mySwiper\", {\n+    var swiper = new Swiper(\".servbansl\", {\n         pagination: {\n             el: \".swiper-pagination\",\n         },\n     });\n"
                },
                {
                    "date": 1729851106723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,7 +112,8 @@\n     // ----------------------BANER SLIDER----------------------\n     var swiper = new Swiper(\".servbansl\", {\n         pagination: {\n             el: \".swiper-pagination\",\n+            clickable: true,\n         },\n     });\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729851199088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n // ----------------------hero bg - animation----------------------\n+if ($('.teamexpslider').length) {\n+\n+}\n document.addEventListener('DOMContentLoaded', () => {\n     const interBubble = document.querySelector('.interactive');\n     let curX = 0;\n     let curY = 0;\n@@ -18,15 +21,8 @@\n         tgY = event.clientY;\n     });\n \n     move();\n-\n-\n-\n-\n-\n-\n-\n });\n \n $(document).ready(function () {\n     // ----------------------hero cards - animation----------------------\n"
                },
                {
                    "date": 1729851210785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,30 @@\n // ----------------------hero bg - animation----------------------\n-if ($('.teamexpslider').length) {\n-\n+if ($('.interactive').length) {\n+    document.addEventListener('DOMContentLoaded', () => {\n+        const interBubble = document.querySelector('.interactive');\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+    \n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+    \n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+    \n+        move();\n+    });\n }\n-document.addEventListener('DOMContentLoaded', () => {\n-    const interBubble = document.querySelector('.interactive');\n-    let curX = 0;\n-    let curY = 0;\n-    let tgX = 0;\n-    let tgY = 0;\n \n-    const move = () => {\n-        curX += (tgX - curX) / 20;\n-        curY += (tgY - curY) / 20;\n-        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-        requestAnimationFrame(move);\n-    };\n \n-    window.addEventListener('mousemove', (event) => {\n-        tgX = event.clientX;\n-        tgY = event.clientY;\n-    });\n-\n-    move();\n-});\n-\n $(document).ready(function () {\n     // ----------------------hero cards - animation----------------------\n \n     let cards = document.querySelectorAll('.servheroinfo');\n"
                },
                {
                    "date": 1729851247004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,26 +25,13 @@\n \n \n $(document).ready(function () {\n     // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n \n-    let cards = document.querySelectorAll('.servheroinfo');\n-    let parent = document.querySelector('.services__hero');\n+    }\n \n-    parent.addEventListener('mousemove', function (e) {\n-        let rect = parent.getBoundingClientRect();\n \n-        let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-        let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-        xAxis = Math.max(-40, Math.min(40, xAxis));\n-        yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-        cards.forEach(card => {\n-            card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-        });\n-    });\n-\n     // ----------------------Success stories----------------------\n     const cardsbox = document.querySelectorAll('.card');\n \n     cardsbox.forEach((cardsbox, index) => {\n"
                },
                {
                    "date": 1729851279630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,40 +5,58 @@\n         let curX = 0;\n         let curY = 0;\n         let tgX = 0;\n         let tgY = 0;\n-    \n+\n         const move = () => {\n             curX += (tgX - curX) / 20;\n             curY += (tgY - curY) / 20;\n             interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n             requestAnimationFrame(move);\n         };\n-    \n+\n         window.addEventListener('mousemove', (event) => {\n             tgX = event.clientX;\n             tgY = event.clientY;\n         });\n-    \n+\n         move();\n     });\n }\n \n \n $(document).ready(function () {\n     // ----------------------hero cards - animation----------------------\n     if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n \n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n     }\n \n \n     // ----------------------Success stories----------------------\n-    const cardsbox = document.querySelectorAll('.card');\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n \n-    cardsbox.forEach((cardsbox, index) => {\n-        cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-        cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-    });\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+  \n \n     // ----------------------testimonials----------------------\n     var swiper = new Swiper(\".testim-centered\", {\n         slidesPerView: 2.4,\n"
                },
                {
                    "date": 1729851298805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,24 +54,26 @@\n             cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n             cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n         });\n     }\n-  \n \n+\n     // ----------------------testimonials----------------------\n-    var swiper = new Swiper(\".testim-centered\", {\n-        slidesPerView: 2.4,\n-        spaceBetween: 0,\n-        centeredSlides: true,\n-        loop: true,\n-        speed: 1000,\n+    if ($('.card').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 2.4,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+    \n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+        });\n+    }\n \n-        navigation: {\n-            nextEl: \".swiper-button-next-t\",\n-            prevEl: \".swiper-button-prev-t\",\n-        },\n-    });\n-\n     // ----------------------Auto tabs----------------------\n     var currentIndex = 0;\n     var totalTabs = $('.autotabs ul li').length;\n     var interval;\n"
                },
                {
                    "date": 1729851304438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,122 @@\n+// ----------------------hero bg - animation----------------------\n+if ($('.interactive').length) {\n+    document.addEventListener('DOMContentLoaded', () => {\n+        const interBubble = document.querySelector('.interactive');\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move();\n+    });\n+}\n+\n+\n+$(document).ready(function () {\n+    // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n+\n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n+    }\n+\n+\n+    // ----------------------Success stories----------------------\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+\n+\n+    // ----------------------testimonials----------------------\n+    if ($('.testim-centered').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 2.4,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+\n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+        });\n+    }\n+\n+    // ----------------------Auto tabs----------------------\n+    var currentIndex = 0;\n+    var totalTabs = $('.autotabs ul li').length;\n+    var interval;\n+\n+    // Function to switch tabs\n+    function switchTab(index) {\n+        // Активний пункт меню\n+        $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+        // Зображення\n+        $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+        // Тексти\n+        $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+    }\n+\n+    // Автоматичне перемикання табів кожні 5 секунд\n+    function startAutoSwitch() {\n+        interval = setInterval(function () {\n+            currentIndex = (currentIndex + 1) % totalTabs;\n+            switchTab(currentIndex);\n+        }, 5000);\n+    }\n+\n+    // Старт автоперемикання\n+    startAutoSwitch();\n+\n+    // Зупинка автоперемикання при кліку на вкладку\n+    $('.autotabs ul li a').click(function (e) {\n+        e.preventDefault();\n+        clearInterval(interval);\n+        currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+        switchTab(currentIndex);\n+    });\n+\n+    // Старт зі спочатку\n+    switchTab(currentIndex);\n+\n+    // ----------------------BANER SLIDER----------------------\n+    var swiper = new Swiper(\".servbansl\", {\n+        pagination: {\n+            el: \".swiper-pagination\",\n+            clickable: true,\n+        },\n+    });\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729851321603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,135 +73,15 @@\n         });\n     }\n \n     // ----------------------Auto tabs----------------------\n-    var currentIndex = 0;\n-    var totalTabs = $('.autotabs ul li').length;\n-    var interval;\n-\n-    // Function to switch tabs\n-    function switchTab(index) {\n-        // Активний пункт меню\n-        $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-        // Зображення\n-        $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-        // Тексти\n-        $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+    if ($('.testim-centered').length) {\n+        \n     }\n-\n-    // Автоматичне перемикання табів кожні 5 секунд\n-    function startAutoSwitch() {\n-        interval = setInterval(function () {\n-            currentIndex = (currentIndex + 1) % totalTabs;\n-            switchTab(currentIndex);\n-        }, 5000);\n-    }\n-\n-    // Старт автоперемикання\n-    startAutoSwitch();\n-\n-    // Зупинка автоперемикання при кліку на вкладку\n-    $('.autotabs ul li a').click(function (e) {\n-        e.preventDefault();\n-        clearInterval(interval);\n-        currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-        switchTab(currentIndex);\n-    });\n-\n-    // Старт зі спочатку\n-    switchTab(currentIndex);\n-\n-    // ----------------------BANER SLIDER----------------------\n-    var swiper = new Swiper(\".servbansl\", {\n-        pagination: {\n-            el: \".swiper-pagination\",\n-            clickable: true,\n-        },\n-    });\n-})\n-// ----------------------hero bg - animation----------------------\n-if ($('.interactive').length) {\n-    document.addEventListener('DOMContentLoaded', () => {\n-        const interBubble = document.querySelector('.interactive');\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n-\n-        move();\n-    });\n-}\n-\n-\n-$(document).ready(function () {\n-    // ----------------------hero cards - animation----------------------\n-    if ($('.services__hero').length) {\n-        let cards = document.querySelectorAll('.servheroinfo');\n-        let parent = document.querySelector('.services__hero');\n-\n-        parent.addEventListener('mousemove', function (e) {\n-            let rect = parent.getBoundingClientRect();\n-\n-            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-            cards.forEach(card => {\n-                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-            });\n-        });\n-    }\n-\n-\n-    // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n-\n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n-\n-\n-    // ----------------------testimonials----------------------\n-    if ($('.card').length) {\n-        var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 2.4,\n-            spaceBetween: 0,\n-            centeredSlides: true,\n-            loop: true,\n-            speed: 1000,\n-    \n-            navigation: {\n-                nextEl: \".swiper-button-next-t\",\n-                prevEl: \".swiper-button-prev-t\",\n-            },\n-        });\n-    }\n-\n-    // ----------------------Auto tabs----------------------\n     var currentIndex = 0;\n     var totalTabs = $('.autotabs ul li').length;\n     var interval;\n \n-    // Function to switch tabs\n     function switchTab(index) {\n         // Активний пункт меню\n         $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n \n@@ -211,28 +91,24 @@\n         // Тексти\n         $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n     }\n \n-    // Автоматичне перемикання табів кожні 5 секунд\n     function startAutoSwitch() {\n         interval = setInterval(function () {\n             currentIndex = (currentIndex + 1) % totalTabs;\n             switchTab(currentIndex);\n         }, 5000);\n     }\n \n-    // Старт автоперемикання\n     startAutoSwitch();\n \n-    // Зупинка автоперемикання при кліку на вкладку\n     $('.autotabs ul li a').click(function (e) {\n         e.preventDefault();\n         clearInterval(interval);\n         currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n         switchTab(currentIndex);\n     });\n \n-    // Старт зі спочатку\n     switchTab(currentIndex);\n \n     // ----------------------BANER SLIDER----------------------\n     var swiper = new Swiper(\".servbansl\", {\n"
                },
                {
                    "date": 1729851329078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,43 +73,43 @@\n         });\n     }\n \n     // ----------------------Auto tabs----------------------\n-    if ($('.testim-centered').length) {\n-        \n-    }\n-    var currentIndex = 0;\n-    var totalTabs = $('.autotabs ul li').length;\n-    var interval;\n+    if ($('.autotabs').length) {\n+        var currentIndex = 0;\n+        var totalTabs = $('.autotabs ul li').length;\n+        var interval;\n \n-    function switchTab(index) {\n-        // Активний пункт меню\n-        $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+        function switchTab(index) {\n+            // Активний пункт меню\n+            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n \n-        // Зображення\n-        $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+            // Зображення\n+            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n \n-        // Тексти\n-        $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-    }\n+            // Тексти\n+            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+        }\n \n-    function startAutoSwitch() {\n-        interval = setInterval(function () {\n-            currentIndex = (currentIndex + 1) % totalTabs;\n+        function startAutoSwitch() {\n+            interval = setInterval(function () {\n+                currentIndex = (currentIndex + 1) % totalTabs;\n+                switchTab(currentIndex);\n+            }, 5000);\n+        }\n+\n+        startAutoSwitch();\n+\n+        $('.autotabs ul li a').click(function (e) {\n+            e.preventDefault();\n+            clearInterval(interval);\n+            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n             switchTab(currentIndex);\n-        }, 5000);\n-    }\n+        });\n \n-    startAutoSwitch();\n-\n-    $('.autotabs ul li a').click(function (e) {\n-        e.preventDefault();\n-        clearInterval(interval);\n-        currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n         switchTab(currentIndex);\n-    });\n+    }\n \n-    switchTab(currentIndex);\n \n     // ----------------------BANER SLIDER----------------------\n     var swiper = new Swiper(\".servbansl\", {\n         pagination: {\n"
                },
                {
                    "date": 1729851355254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,11 +110,14 @@\n     }\n \n \n     // ----------------------BANER SLIDER----------------------\n-    var swiper = new Swiper(\".servbansl\", {\n-        pagination: {\n-            el: \".swiper-pagination\",\n-            clickable: true,\n-        },\n-    });\n+    if ($('.servbansl').length) {\n+        var swiper = new Swiper(\".servbansl\", {\n+            pagination: {\n+                el: \".swiper-pagination\",\n+                clickable: true,\n+            },\n+        });\n+    }\n+   \n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729851362810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,12 +112,13 @@\n \n     // ----------------------BANER SLIDER----------------------\n     if ($('.servbansl').length) {\n         var swiper = new Swiper(\".servbansl\", {\n+            speed: 1000,\n             pagination: {\n                 el: \".swiper-pagination\",\n                 clickable: true,\n             },\n         });\n     }\n-   \n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729851383390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,10 @@\n     // ----------------------BANER SLIDER----------------------\n     if ($('.servbansl').length) {\n         var swiper = new Swiper(\".servbansl\", {\n             speed: 1000,\n+            spaceBetween: 20,\n+\n             pagination: {\n                 el: \".swiper-pagination\",\n                 clickable: true,\n             },\n"
                },
                {
                    "date": 1729851394280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,9 @@\n     if ($('.servbansl').length) {\n         var swiper = new Swiper(\".servbansl\", {\n             speed: 1000,\n             spaceBetween: 20,\n+            loop: true,\n \n             pagination: {\n                 el: \".swiper-pagination\",\n                 clickable: true,\n"
                },
                {
                    "date": 1729852305786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // ----------------------hero bg - animation----------------------\n-if ($('.interactive').length) {\n+if ($('.gradient-bg').length) {\n     document.addEventListener('DOMContentLoaded', () => {\n         const interBubble = document.querySelector('.interactive');\n         let curX = 0;\n         let curY = 0;\n"
                },
                {
                    "date": 1729852316008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // ----------------------hero bg - animation----------------------\n-if ($('.gradient-bg').length) {\n+if ($('.interactive').length) {\n     document.addEventListener('DOMContentLoaded', () => {\n         const interBubble = document.querySelector('.interactive');\n         let curX = 0;\n         let curY = 0;\n"
                },
                {
                    "date": 1729852514957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,27 @@\n // ----------------------hero bg - animation----------------------\n if ($('.interactive').length) {\n-    document.addEventListener('DOMContentLoaded', () => {\n-        const interBubble = document.querySelector('.interactive');\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const interBubble = document.querySelector('.interactive');\n+    //     let curX = 0;\n+    //     let curY = 0;\n+    //     let tgX = 0;\n+    //     let tgY = 0;\n \n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n+    //     const move = () => {\n+    //         curX += (tgX - curX) / 20;\n+    //         curY += (tgY - curY) / 20;\n+    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+    //         requestAnimationFrame(move);\n+    //     };\n \n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n+    //     window.addEventListener('mousemove', (event) => {\n+    //         tgX = event.clientX;\n+    //         tgY = event.clientY;\n+    //     });\n \n-        move();\n-    });\n+    //     move();\n+    // });\n }\n \n \n $(document).ready(function () {\n"
                },
                {
                    "date": 1729852537535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // ----------------------hero bg - animation----------------------\n-if ($('.interactive').length) {\n+if ($('.gradient-bg').length) {\n     // document.addEventListener('DOMContentLoaded', () => {\n     //     const interBubble = document.querySelector('.interactive');\n     //     let curX = 0;\n     //     let curY = 0;\n"
                },
                {
                    "date": 1729852542991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,33 @@\n     //     });\n \n     //     move();\n     // });\n+    document.addEventListener('DOMContentLoaded', () => {\n+        const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+        \n+        interBubbles.forEach((interBubble) => {\n+            let curX = 0;\n+            let curY = 0;\n+            let tgX = 0;\n+            let tgY = 0;\n+    \n+            const move = () => {\n+                curX += (tgX - curX) / 20;\n+                curY += (tgY - curY) / 20;\n+                interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+                requestAnimationFrame(move);\n+            };\n+    \n+            window.addEventListener('mousemove', (event) => {\n+                tgX = event.clientX;\n+                tgY = event.clientY;\n+            });\n+    \n+            move(); // Запускаємо анімацію для кожного елемента\n+        });\n+    });\n+    \n }\n \n \n $(document).ready(function () {\n"
                },
                {
                    "date": 1729852715487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,31 +20,47 @@\n     //     });\n \n     //     move();\n     // });\n-    document.addEventListener('DOMContentLoaded', () => {\n-        const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble, index) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Динамічно змінюємо id у кожному SVG\n+        const noiseBg = interBubble.closest('.gradients-container').querySelector('.noiseBg filter');\n+        const gooFilter = interBubble.closest('.gradients-container').querySelector('.svgBlur filter');\n         \n-        interBubbles.forEach((interBubble) => {\n-            let curX = 0;\n-            let curY = 0;\n-            let tgX = 0;\n-            let tgY = 0;\n-    \n-            const move = () => {\n-                curX += (tgX - curX) / 20;\n-                curY += (tgY - curY) / 20;\n-                interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-                requestAnimationFrame(move);\n-            };\n-    \n-            window.addEventListener('mousemove', (event) => {\n-                tgX = event.clientX;\n-                tgY = event.clientY;\n-            });\n-    \n-            move(); // Запускаємо анімацію для кожного елемента\n+        const uniqueNoiseId = `noiseFilterBg-${index}`;\n+        const uniqueGooId = `goo-${index}`;\n+        \n+        noiseBg.setAttribute('id', uniqueNoiseId);\n+        gooFilter.setAttribute('id', uniqueGooId);\n+\n+        // Змінюємо атрибути фільтра\n+        const noiseRect = interBubble.closest('.gradients-container').querySelector('.noiseBg rect');\n+        noiseRect.setAttribute('filter', `url(#${uniqueNoiseId})`);\n+\n+        const svgBlur = interBubble.closest('.gradients-container').querySelector('.svgBlur filter');\n+        svgBlur.setAttribute('filter', `url(#${uniqueGooId})`);\n+\n+        // Анімація\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n         });\n+\n+        move();\n     });\n     \n }\n \n"
                },
                {
                    "date": 1729852785498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n         \n         const uniqueNoiseId = `noiseFilterBg-${index}`;\n         const uniqueGooId = `goo-${index}`;\n         \n-        noiseBg.setAttribute('id', uniqueNoiseId);\n-        gooFilter.setAttribute('id', uniqueGooId);\n+        noiseBg.setAttribute('class', uniqueNoiseId);\n+        gooFilter.setAttribute('class', uniqueGooId);\n \n         // Змінюємо атрибути фільтра\n         const noiseRect = interBubble.closest('.gradients-container').querySelector('.noiseBg rect');\n         noiseRect.setAttribute('filter', `url(#${uniqueNoiseId})`);\n"
                },
                {
                    "date": 1729852802417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,48 +20,9 @@\n     //     });\n \n     //     move();\n     // });\n-    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n-\n-    interBubbles.forEach((interBubble, index) => {\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        // Динамічно змінюємо id у кожному SVG\n-        const noiseBg = interBubble.closest('.gradients-container').querySelector('.noiseBg filter');\n-        const gooFilter = interBubble.closest('.gradients-container').querySelector('.svgBlur filter');\n-        \n-        const uniqueNoiseId = `noiseFilterBg-${index}`;\n-        const uniqueGooId = `goo-${index}`;\n-        \n-        noiseBg.setAttribute('class', uniqueNoiseId);\n-        gooFilter.setAttribute('class', uniqueGooId);\n-\n-        // Змінюємо атрибути фільтра\n-        const noiseRect = interBubble.closest('.gradients-container').querySelector('.noiseBg rect');\n-        noiseRect.setAttribute('filter', `url(#${uniqueNoiseId})`);\n-\n-        const svgBlur = interBubble.closest('.gradients-container').querySelector('.svgBlur filter');\n-        svgBlur.setAttribute('filter', `url(#${uniqueGooId})`);\n-\n-        // Анімація\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n-\n-        move();\n-    });\n+   \n     \n }\n \n \n"
                },
                {
                    "date": 1729852873280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,31 @@\n     //     });\n \n     //     move();\n     // });\n-   \n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Анімація для кожного interactive елемента\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move(); // Запуск анімації\n+    });\n     \n }\n \n \n"
                },
                {
                    "date": 1729853711650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,5 +147,26 @@\n             },\n         });\n     }\n \n+    // tech stack\n+    const spaceHolder = document.querySelector('.space-holder');\n+const horizontal = document.querySelector('.horizontal');\n+spaceHolder.style.height = `${calcDynamicHeight(horizontal)}px`;\n+\n+function calcDynamicHeight(ref) {\n+  const vw = window.innerWidth;\n+  const vh = window.innerHeight;\n+  const objectWidth = ref.scrollWidth;\n+  return objectWidth - vw + vh + 150; // 150 is the padding (in pixels) desired on the right side of the .cards container. This can be set to whatever your styles dictate\n+}\n+\n+window.addEventListener('scroll', () => {\n+  const sticky = document.querySelector('.sticky');\n+  horizontal.style.transform = `translateX(-${sticky.offsetTop}px)`;\n+});\n+\n+window.addEventListener('resize', () => {\n+  spaceHolder.style.height = `${calcDynamicHeight(horizontal)}px`;\n+});\n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729853733420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,25 +148,7 @@\n         });\n     }\n \n     // tech stack\n-    const spaceHolder = document.querySelector('.space-holder');\n-const horizontal = document.querySelector('.horizontal');\n-spaceHolder.style.height = `${calcDynamicHeight(horizontal)}px`;\n+    \n \n-function calcDynamicHeight(ref) {\n-  const vw = window.innerWidth;\n-  const vh = window.innerHeight;\n-  const objectWidth = ref.scrollWidth;\n-  return objectWidth - vw + vh + 150; // 150 is the padding (in pixels) desired on the right side of the .cards container. This can be set to whatever your styles dictate\n-}\n-\n-window.addEventListener('scroll', () => {\n-  const sticky = document.querySelector('.sticky');\n-  horizontal.style.transform = `translateX(-${sticky.offsetTop}px)`;\n-});\n-\n-window.addEventListener('resize', () => {\n-  spaceHolder.style.height = `${calcDynamicHeight(horizontal)}px`;\n-});\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729853843814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,7 +148,24 @@\n         });\n     }\n \n     // tech stack\n-    \n+    const swiper = new Swiper('.test', {\n+        slideToClickedSlide: true,\n+        slidePerView: \"auto\",\n+        freeMode: {\n+          enabled: true,\n+          sticky: false,\n+          momentumBounce: false,\n+        },\n+        scrollbar: {\n+          el: '.swiper-scrollbar',\n+          draggable: true,\n+          dragSize: 100,\n+        },\n+        mousewheel: {\n+          enabled: true,\n+          sensitivity: 4,\n+        },\n+      });\n \n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729853992716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n         });\n     }\n \n     // tech stack\n-    const swiper = new Swiper('.test', {\n+    const swiper4 = new Swiper('.test', {\n         slideToClickedSlide: true,\n         slidePerView: \"auto\",\n         freeMode: {\n           enabled: true,\n"
                },
                {
                    "date": 1729854010945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,8 +151,9 @@\n     // tech stack\n     const swiper4 = new Swiper('.test', {\n         slideToClickedSlide: true,\n         slidePerView: \"auto\",\n+        loop: true\n         freeMode: {\n           enabled: true,\n           sticky: false,\n           momentumBounce: false,\n"
                },
                {
                    "date": 1729854030456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,8 @@\n     // tech stack\n     const swiper4 = new Swiper('.test', {\n         slideToClickedSlide: true,\n         slidePerView: \"auto\",\n-        loop: true\n         freeMode: {\n           enabled: true,\n           sticky: false,\n           momentumBounce: false,\n"
                },
                {
                    "date": 1729854152141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,24 +148,7 @@\n         });\n     }\n \n     // tech stack\n-    const swiper4 = new Swiper('.test', {\n-        slideToClickedSlide: true,\n-        slidePerView: \"auto\",\n-        freeMode: {\n-          enabled: true,\n-          sticky: false,\n-          momentumBounce: false,\n-        },\n-        scrollbar: {\n-          el: '.swiper-scrollbar',\n-          draggable: true,\n-          dragSize: 100,\n-        },\n-        mousewheel: {\n-          enabled: true,\n-          sensitivity: 4,\n-        },\n-      });\n \n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854177887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,7 +148,16 @@\n         });\n     }\n \n     // tech stack\n+    var swiper = new Swiper(\".mySwiper\", {\n+        direction: \"vertical\",\n+        slidesPerView: 1,\n+        spaceBetween: 30,\n+        mousewheel: true,\n+        pagination: {\n+          el: \".swiper-pagination\",\n+          clickable: true,\n+        },\n+      });\n \n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854198535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,162 @@\n+// ----------------------hero bg - animation----------------------\n+if ($('.gradient-bg').length) {\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const interBubble = document.querySelector('.interactive');\n+    //     let curX = 0;\n+    //     let curY = 0;\n+    //     let tgX = 0;\n+    //     let tgY = 0;\n+\n+    //     const move = () => {\n+    //         curX += (tgX - curX) / 20;\n+    //         curY += (tgY - curY) / 20;\n+    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+    //         requestAnimationFrame(move);\n+    //     };\n+\n+    //     window.addEventListener('mousemove', (event) => {\n+    //         tgX = event.clientX;\n+    //         tgY = event.clientY;\n+    //     });\n+\n+    //     move();\n+    // });\n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Анімація для кожного interactive елемента\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move(); // Запуск анімації\n+    });\n+    \n+}\n+\n+\n+$(document).ready(function () {\n+    // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n+\n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n+    }\n+\n+\n+    // ----------------------Success stories----------------------\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+\n+\n+    // ----------------------testimonials----------------------\n+    if ($('.testim-centered').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 2.4,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+\n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+        });\n+    }\n+\n+    // ----------------------Auto tabs----------------------\n+    if ($('.autotabs').length) {\n+        var currentIndex = 0;\n+        var totalTabs = $('.autotabs ul li').length;\n+        var interval;\n+\n+        function switchTab(index) {\n+            // Активний пункт меню\n+            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+            // Зображення\n+            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+            // Тексти\n+            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+        }\n+\n+        function startAutoSwitch() {\n+            interval = setInterval(function () {\n+                currentIndex = (currentIndex + 1) % totalTabs;\n+                switchTab(currentIndex);\n+            }, 5000);\n+        }\n+\n+        startAutoSwitch();\n+\n+        $('.autotabs ul li a').click(function (e) {\n+            e.preventDefault();\n+            clearInterval(interval);\n+            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+            switchTab(currentIndex);\n+        });\n+\n+        switchTab(currentIndex);\n+    }\n+\n+\n+    // ----------------------BANER SLIDER----------------------\n+    if ($('.servbansl').length) {\n+        var swiper = new Swiper(\".servbansl\", {\n+            speed: 1000,\n+            spaceBetween: 20,\n+            loop: true,\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+                clickable: true,\n+            },\n+        });\n+    }\n+\n+    // tech stack\n+    var swiper = new Swiper(\".mySwiper\", {\n+        slidesPerView: 1,\n+        spaceBetween: 30,\n+        mousewheel: true,\n+        pagination: {\n+          el: \".swiper-pagination\",\n+          clickable: true,\n+        },\n+      });\n+\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854216139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,174 +152,12 @@\n     var swiper = new Swiper(\".mySwiper\", {\n         slidesPerView: 1,\n         spaceBetween: 30,\n         mousewheel: true,\n+        loop: true,\n         pagination: {\n           el: \".swiper-pagination\",\n           clickable: true,\n         },\n       });\n \n-})\n-// ----------------------hero bg - animation----------------------\n-if ($('.gradient-bg').length) {\n-    // document.addEventListener('DOMContentLoaded', () => {\n-    //     const interBubble = document.querySelector('.interactive');\n-    //     let curX = 0;\n-    //     let curY = 0;\n-    //     let tgX = 0;\n-    //     let tgY = 0;\n-\n-    //     const move = () => {\n-    //         curX += (tgX - curX) / 20;\n-    //         curY += (tgY - curY) / 20;\n-    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-    //         requestAnimationFrame(move);\n-    //     };\n-\n-    //     window.addEventListener('mousemove', (event) => {\n-    //         tgX = event.clientX;\n-    //         tgY = event.clientY;\n-    //     });\n-\n-    //     move();\n-    // });\n-    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n-\n-    interBubbles.forEach((interBubble) => {\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        // Анімація для кожного interactive елемента\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n-\n-        move(); // Запуск анімації\n-    });\n-    \n-}\n-\n-\n-$(document).ready(function () {\n-    // ----------------------hero cards - animation----------------------\n-    if ($('.services__hero').length) {\n-        let cards = document.querySelectorAll('.servheroinfo');\n-        let parent = document.querySelector('.services__hero');\n-\n-        parent.addEventListener('mousemove', function (e) {\n-            let rect = parent.getBoundingClientRect();\n-\n-            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-            cards.forEach(card => {\n-                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-            });\n-        });\n-    }\n-\n-\n-    // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n-\n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n-\n-\n-    // ----------------------testimonials----------------------\n-    if ($('.testim-centered').length) {\n-        var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 2.4,\n-            spaceBetween: 0,\n-            centeredSlides: true,\n-            loop: true,\n-            speed: 1000,\n-\n-            navigation: {\n-                nextEl: \".swiper-button-next-t\",\n-                prevEl: \".swiper-button-prev-t\",\n-            },\n-        });\n-    }\n-\n-    // ----------------------Auto tabs----------------------\n-    if ($('.autotabs').length) {\n-        var currentIndex = 0;\n-        var totalTabs = $('.autotabs ul li').length;\n-        var interval;\n-\n-        function switchTab(index) {\n-            // Активний пункт меню\n-            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-            // Зображення\n-            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-            // Тексти\n-            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-        }\n-\n-        function startAutoSwitch() {\n-            interval = setInterval(function () {\n-                currentIndex = (currentIndex + 1) % totalTabs;\n-                switchTab(currentIndex);\n-            }, 5000);\n-        }\n-\n-        startAutoSwitch();\n-\n-        $('.autotabs ul li a').click(function (e) {\n-            e.preventDefault();\n-            clearInterval(interval);\n-            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-            switchTab(currentIndex);\n-        });\n-\n-        switchTab(currentIndex);\n-    }\n-\n-\n-    // ----------------------BANER SLIDER----------------------\n-    if ($('.servbansl').length) {\n-        var swiper = new Swiper(\".servbansl\", {\n-            speed: 1000,\n-            spaceBetween: 20,\n-            loop: true,\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-                clickable: true,\n-            },\n-        });\n-    }\n-\n-    // tech stack\n-    var swiper = new Swiper(\".mySwiper\", {\n-        direction: \"vertical\",\n-        slidesPerView: 1,\n-        spaceBetween: 30,\n-        mousewheel: true,\n-        pagination: {\n-          el: \".swiper-pagination\",\n-          clickable: true,\n-        },\n-      });\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854333235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,8 +153,13 @@\n         slidesPerView: 1,\n         spaceBetween: 30,\n         mousewheel: true,\n         loop: true,\n+        speed: 6000,\n+        autoplay: {\n+            disableOnInteraction: false,\n+            delay: 1,\n+        },\n         pagination: {\n           el: \".swiper-pagination\",\n           clickable: true,\n         },\n"
                },
                {
                    "date": 1729854365365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n         slidesPerView: 1,\n         spaceBetween: 30,\n         mousewheel: true,\n         loop: true,\n-        speed: 6000,\n+        // speed: 6000,\n         autoplay: {\n             disableOnInteraction: false,\n             delay: 1,\n         },\n"
                },
                {
                    "date": 1729854371554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,12 +154,12 @@\n         spaceBetween: 30,\n         mousewheel: true,\n         loop: true,\n         // speed: 6000,\n-        autoplay: {\n-            disableOnInteraction: false,\n-            delay: 1,\n-        },\n+        // autoplay: {\n+        //     disableOnInteraction: false,\n+        //     delay: 1,\n+        // },\n         pagination: {\n           el: \".swiper-pagination\",\n           clickable: true,\n         },\n"
                },
                {
                    "date": 1729854575912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,21 +148,50 @@\n         });\n     }\n \n     // tech stack\n-    var swiper = new Swiper(\".mySwiper\", {\n-        slidesPerView: 1,\n-        spaceBetween: 30,\n-        mousewheel: true,\n-        loop: true,\n-        // speed: 6000,\n-        // autoplay: {\n-        //     disableOnInteraction: false,\n-        //     delay: 1,\n-        // },\n-        pagination: {\n-          el: \".swiper-pagination\",\n-          clickable: true,\n-        },\n-      });\n+    // var swiper = new Swiper(\".mySwiper\", {\n+    //     slidesPerView: 1,\n+    //     spaceBetween: 30,\n+    //     mousewheel: true,\n+    //     loop: true,\n+    //     // speed: 6000,\n+    //     // autoplay: {\n+    //     //     disableOnInteraction: false,\n+    //     //     delay: 1,\n+    //     // },\n+    //     pagination: {\n+    //       el: \".swiper-pagination\",\n+    //       clickable: true,\n+    //     },\n+    //   });\n \n+    const scrollboxes = document.querySelector('.scrollboxes');\n+\n+    scrollboxes.addEventListener('wheel', (event) => {\n+        event.preventDefault(); // Забороняємо вертикальну прокрутку сторінки\n+        scrollboxes.scrollLeft += event.deltaY; // Прокрутка вліво/вправо\n+    });\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854641354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,15 +165,46 @@\n     //     },\n     //   });\n \n     const scrollboxes = document.querySelector('.scrollboxes');\n+    let scrollItems = Array.from(scrollboxes.children); // Отримуємо всі елементи\n \n+    // Дублюємо перший і останній елементи для циклічності\n+    const firstClone = scrollItems[0].cloneNode(true);\n+    const lastClone = scrollItems[scrollItems.length - 1].cloneNode(true);\n+\n+    // Додаємо клоновані елементи на початок і кінець\n+    scrollboxes.appendChild(firstClone);\n+    scrollboxes.insertBefore(lastClone, scrollItems[0]);\n+\n+    // Оновлюємо список елементів після додавання клонів\n+    scrollItems = Array.from(scrollboxes.children);\n+    \n+    // Встановлюємо початкову позицію прокрутки на перший \"справжній\" елемент\n+    scrollboxes.scrollLeft = scrollItems[1].offsetLeft;\n+\n+    let isScrolling = false;\n+\n+    // Прокрутка за допомогою колеса миші\n     scrollboxes.addEventListener('wheel', (event) => {\n-        event.preventDefault(); // Забороняємо вертикальну прокрутку сторінки\n-        scrollboxes.scrollLeft += event.deltaY; // Прокрутка вліво/вправо\n-    });\n+        if (isScrolling) return; // Не дозволяємо нову прокрутку під час поточної\n+        isScrolling = true;\n \n+        event.preventDefault();\n+        scrollboxes.scrollLeft += event.deltaY; // Горизонтальна прокрутка\n \n+        setTimeout(() => {\n+            // Якщо прокрутили до клона в кінці, переміщуємо на початковий елемент\n+            if (scrollboxes.scrollLeft >= scrollItems[scrollItems.length - 1].offsetLeft) {\n+                scrollboxes.scrollLeft = scrollItems[1].offsetLeft;\n+            }\n+            // Якщо прокрутили до клона на початку, переміщуємо на останній справжній елемент\n+            if (scrollboxes.scrollLeft <= 0) {\n+                scrollboxes.scrollLeft = scrollItems[scrollItems.length - 2].offsetLeft;\n+            }\n+            isScrolling = false;\n+        }, 300); // Невелика затримка для завершення прокрутки\n+    });\n \n \n \n \n@@ -192,6 +223,5 @@\n \n \n \n \n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854679405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,46 +165,19 @@\n     //     },\n     //   });\n \n     const scrollboxes = document.querySelector('.scrollboxes');\n-    let scrollItems = Array.from(scrollboxes.children); // Отримуємо всі елементи\n \n-    // Дублюємо перший і останній елементи для циклічності\n-    const firstClone = scrollItems[0].cloneNode(true);\n-    const lastClone = scrollItems[scrollItems.length - 1].cloneNode(true);\n+    scrollboxes.addEventListener('wheel', (event) => {\n+        event.preventDefault(); // Забороняємо вертикальну прокрутку сторінки\n+        scrollboxes.scrollLeft += event.deltaY; // Прокрутка вліво/вправо\n+    });\n \n-    // Додаємо клоновані елементи на початок і кінець\n-    scrollboxes.appendChild(firstClone);\n-    scrollboxes.insertBefore(lastClone, scrollItems[0]);\n \n-    // Оновлюємо список елементів після додавання клонів\n-    scrollItems = Array.from(scrollboxes.children);\n-    \n-    // Встановлюємо початкову позицію прокрутки на перший \"справжній\" елемент\n-    scrollboxes.scrollLeft = scrollItems[1].offsetLeft;\n \n-    let isScrolling = false;\n \n-    // Прокрутка за допомогою колеса миші\n-    scrollboxes.addEventListener('wheel', (event) => {\n-        if (isScrolling) return; // Не дозволяємо нову прокрутку під час поточної\n-        isScrolling = true;\n \n-        event.preventDefault();\n-        scrollboxes.scrollLeft += event.deltaY; // Горизонтальна прокрутка\n \n-        setTimeout(() => {\n-            // Якщо прокрутили до клона в кінці, переміщуємо на початковий елемент\n-            if (scrollboxes.scrollLeft >= scrollItems[scrollItems.length - 1].offsetLeft) {\n-                scrollboxes.scrollLeft = scrollItems[1].offsetLeft;\n-            }\n-            // Якщо прокрутили до клона на початку, переміщуємо на останній справжній елемент\n-            if (scrollboxes.scrollLeft <= 0) {\n-                scrollboxes.scrollLeft = scrollItems[scrollItems.length - 2].offsetLeft;\n-            }\n-            isScrolling = false;\n-        }, 300); // Невелика затримка для завершення прокрутки\n-    });\n \n \n \n \n@@ -220,8 +193,5 @@\n \n \n \n \n-\n-\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854684547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,30 +148,26 @@\n         });\n     }\n \n     // tech stack\n-    // var swiper = new Swiper(\".mySwiper\", {\n-    //     slidesPerView: 1,\n-    //     spaceBetween: 30,\n-    //     mousewheel: true,\n-    //     loop: true,\n-    //     // speed: 6000,\n-    //     // autoplay: {\n-    //     //     disableOnInteraction: false,\n-    //     //     delay: 1,\n-    //     // },\n-    //     pagination: {\n-    //       el: \".swiper-pagination\",\n-    //       clickable: true,\n-    //     },\n-    //   });\n+    var swiper = new Swiper(\".mySwiper\", {\n+        slidesPerView: 1,\n+        spaceBetween: 30,\n+        mousewheel: true,\n+        loop: true,\n+        // speed: 6000,\n+        // autoplay: {\n+        //     disableOnInteraction: false,\n+        //     delay: 1,\n+        // },\n+        pagination: {\n+          el: \".swiper-pagination\",\n+          clickable: true,\n+        },\n+      });\n \n-    const scrollboxes = document.querySelector('.scrollboxes');\n+  \n \n-    scrollboxes.addEventListener('wheel', (event) => {\n-        event.preventDefault(); // Забороняємо вертикальну прокрутку сторінки\n-        scrollboxes.scrollLeft += event.deltaY; // Прокрутка вліво/вправо\n-    });\n \n \n \n \n@@ -189,9 +185,5 @@\n \n \n \n \n-\n-\n-\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854734262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,8 +152,9 @@\n     var swiper = new Swiper(\".mySwiper\", {\n         slidesPerView: 1,\n         spaceBetween: 30,\n         mousewheel: true,\n+        freeMode: true,\n         loop: true,\n         // speed: 6000,\n         // autoplay: {\n         //     disableOnInteraction: false,\n"
                },
                {
                    "date": 1729854761443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,12 +155,12 @@\n         mousewheel: true,\n         freeMode: true,\n         loop: true,\n         // speed: 6000,\n-        // autoplay: {\n-        //     disableOnInteraction: false,\n-        //     delay: 1,\n-        // },\n+        autoplay: {\n+            disableOnInteraction: false,\n+            delay: 1,\n+        },\n         pagination: {\n           el: \".swiper-pagination\",\n           clickable: true,\n         },\n"
                },
                {
                    "date": 1729854774499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,12 +155,12 @@\n         mousewheel: true,\n         freeMode: true,\n         loop: true,\n         // speed: 6000,\n-        autoplay: {\n-            disableOnInteraction: false,\n-            delay: 1,\n-        },\n+        // autoplay: {\n+        //     disableOnInteraction: false,\n+        //     delay: 1,\n+        // },\n         pagination: {\n           el: \".swiper-pagination\",\n           clickable: true,\n         },\n"
                },
                {
                    "date": 1729854784651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+// ----------------------hero bg - animation----------------------\n+if ($('.gradient-bg').length) {\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const interBubble = document.querySelector('.interactive');\n+    //     let curX = 0;\n+    //     let curY = 0;\n+    //     let tgX = 0;\n+    //     let tgY = 0;\n+\n+    //     const move = () => {\n+    //         curX += (tgX - curX) / 20;\n+    //         curY += (tgY - curY) / 20;\n+    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+    //         requestAnimationFrame(move);\n+    //     };\n+\n+    //     window.addEventListener('mousemove', (event) => {\n+    //         tgX = event.clientX;\n+    //         tgY = event.clientY;\n+    //     });\n+\n+    //     move();\n+    // });\n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Анімація для кожного interactive елемента\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move(); // Запуск анімації\n+    });\n+    \n+}\n+\n+\n+$(document).ready(function () {\n+    // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n+\n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n+    }\n+\n+\n+    // ----------------------Success stories----------------------\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+\n+\n+    // ----------------------testimonials----------------------\n+    if ($('.testim-centered').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 2.4,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+\n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+        });\n+    }\n+\n+    // ----------------------Auto tabs----------------------\n+    if ($('.autotabs').length) {\n+        var currentIndex = 0;\n+        var totalTabs = $('.autotabs ul li').length;\n+        var interval;\n+\n+        function switchTab(index) {\n+            // Активний пункт меню\n+            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+            // Зображення\n+            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+            // Тексти\n+            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+        }\n+\n+        function startAutoSwitch() {\n+            interval = setInterval(function () {\n+                currentIndex = (currentIndex + 1) % totalTabs;\n+                switchTab(currentIndex);\n+            }, 5000);\n+        }\n+\n+        startAutoSwitch();\n+\n+        $('.autotabs ul li a').click(function (e) {\n+            e.preventDefault();\n+            clearInterval(interval);\n+            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+            switchTab(currentIndex);\n+        });\n+\n+        switchTab(currentIndex);\n+    }\n+\n+\n+    // ----------------------BANER SLIDER----------------------\n+    if ($('.servbansl').length) {\n+        var swiper = new Swiper(\".servbansl\", {\n+            speed: 1000,\n+            spaceBetween: 20,\n+            loop: true,\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+                clickable: true,\n+            },\n+        });\n+    }\n+\n+    // tech stack\n+    var swiper = new Swiper(\".mySwiper\", {\n+        slidesPerView: 1,\n+        spaceBetween: 30,\n+        mousewheel: true,\n+        freeMode: true,\n+        loop: true,\n+        // speed: 6000,\n+        // autoplay: {\n+        //     disableOnInteraction: false,\n+        //     delay: 1,\n+        // },\n+       \n+      });\n+\n+  \n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729854804540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n         });\n     }\n \n     // tech stack\n-    var swiper = new Swiper(\".mySwiper\", {\n+    var swiper = new Swiper(\".techslider\", {\n         slidesPerView: 1,\n         spaceBetween: 30,\n         mousewheel: true,\n         freeMode: true,\n"
                },
                {
                    "date": 1729855126320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n     }\n \n     // tech stack\n     var swiper = new Swiper(\".techslider\", {\n-        slidesPerView: 1,\n+        slidesPerView: 3,\n         spaceBetween: 30,\n         mousewheel: true,\n         freeMode: true,\n         loop: true,\n@@ -183,195 +183,5 @@\n \n \n \n \n-})\n-// ----------------------hero bg - animation----------------------\n-if ($('.gradient-bg').length) {\n-    // document.addEventListener('DOMContentLoaded', () => {\n-    //     const interBubble = document.querySelector('.interactive');\n-    //     let curX = 0;\n-    //     let curY = 0;\n-    //     let tgX = 0;\n-    //     let tgY = 0;\n-\n-    //     const move = () => {\n-    //         curX += (tgX - curX) / 20;\n-    //         curY += (tgY - curY) / 20;\n-    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-    //         requestAnimationFrame(move);\n-    //     };\n-\n-    //     window.addEventListener('mousemove', (event) => {\n-    //         tgX = event.clientX;\n-    //         tgY = event.clientY;\n-    //     });\n-\n-    //     move();\n-    // });\n-    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n-\n-    interBubbles.forEach((interBubble) => {\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        // Анімація для кожного interactive елемента\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n-\n-        move(); // Запуск анімації\n-    });\n-    \n-}\n-\n-\n-$(document).ready(function () {\n-    // ----------------------hero cards - animation----------------------\n-    if ($('.services__hero').length) {\n-        let cards = document.querySelectorAll('.servheroinfo');\n-        let parent = document.querySelector('.services__hero');\n-\n-        parent.addEventListener('mousemove', function (e) {\n-            let rect = parent.getBoundingClientRect();\n-\n-            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-            cards.forEach(card => {\n-                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-            });\n-        });\n-    }\n-\n-\n-    // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n-\n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n-\n-\n-    // ----------------------testimonials----------------------\n-    if ($('.testim-centered').length) {\n-        var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 2.4,\n-            spaceBetween: 0,\n-            centeredSlides: true,\n-            loop: true,\n-            speed: 1000,\n-\n-            navigation: {\n-                nextEl: \".swiper-button-next-t\",\n-                prevEl: \".swiper-button-prev-t\",\n-            },\n-        });\n-    }\n-\n-    // ----------------------Auto tabs----------------------\n-    if ($('.autotabs').length) {\n-        var currentIndex = 0;\n-        var totalTabs = $('.autotabs ul li').length;\n-        var interval;\n-\n-        function switchTab(index) {\n-            // Активний пункт меню\n-            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-            // Зображення\n-            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-            // Тексти\n-            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-        }\n-\n-        function startAutoSwitch() {\n-            interval = setInterval(function () {\n-                currentIndex = (currentIndex + 1) % totalTabs;\n-                switchTab(currentIndex);\n-            }, 5000);\n-        }\n-\n-        startAutoSwitch();\n-\n-        $('.autotabs ul li a').click(function (e) {\n-            e.preventDefault();\n-            clearInterval(interval);\n-            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-            switchTab(currentIndex);\n-        });\n-\n-        switchTab(currentIndex);\n-    }\n-\n-\n-    // ----------------------BANER SLIDER----------------------\n-    if ($('.servbansl').length) {\n-        var swiper = new Swiper(\".servbansl\", {\n-            speed: 1000,\n-            spaceBetween: 20,\n-            loop: true,\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-                clickable: true,\n-            },\n-        });\n-    }\n-\n-    // tech stack\n-    var swiper = new Swiper(\".mySwiper\", {\n-        slidesPerView: 1,\n-        spaceBetween: 30,\n-        mousewheel: true,\n-        freeMode: true,\n-        loop: true,\n-        // speed: 6000,\n-        // autoplay: {\n-        //     disableOnInteraction: false,\n-        //     delay: 1,\n-        // },\n-        pagination: {\n-          el: \".swiper-pagination\",\n-          clickable: true,\n-        },\n-      });\n-\n-  \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729855166957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,13 +154,13 @@\n         spaceBetween: 30,\n         mousewheel: true,\n         freeMode: true,\n         loop: true,\n-        // speed: 6000,\n-        // autoplay: {\n-        //     disableOnInteraction: false,\n-        //     delay: 1,\n-        // },\n+        speed: 1000,\n+        autoplay: {\n+            disableOnInteraction: false,\n+            delay: 1,\n+        },\n        \n       });\n \n   \n"
                },
                {
                    "date": 1729855278663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         });\n \n         move(); // Запуск анімації\n     });\n-    \n+\n }\n \n \n $(document).ready(function () {\n@@ -148,8 +148,22 @@\n         });\n     }\n \n     // tech stack\n+    // var swiper = new Swiper(\".techslider\", {\n+    //     slidesPerView: 3,\n+    //     spaceBetween: 30,\n+    //     mousewheel: true,\n+    //     freeMode: true,\n+    //     loop: true,\n+    //     speed: 1000,\n+    //     autoplay: {\n+    //         disableOnInteraction: false,\n+    //         delay: 1,\n+    //     },\n+\n+    // });\n+\n     var swiper = new Swiper(\".techslider\", {\n         slidesPerView: 3,\n         spaceBetween: 30,\n         mousewheel: true,\n@@ -159,12 +173,24 @@\n         autoplay: {\n             disableOnInteraction: false,\n             delay: 1,\n         },\n-       \n-      });\n+    });\n+    \n+    // Функція для перезапуску автоплей\n+    let autoplayTimeout;\n+    \n+    swiper.el.addEventListener('wheel', () => {\n+        // Зупиняємо автоплей при прокручуванні мишкою\n+        swiper.autoplay.stop();\n+    \n+        // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n+        clearTimeout(autoplayTimeout);\n+        autoplayTimeout = setTimeout(() => {\n+            swiper.autoplay.start();\n+        }, 2000); // Час в мілісекундах (2 секунди)\n+    });\n \n-  \n \n \n \n \n@@ -182,6 +208,5 @@\n \n \n \n \n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729855392292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,223 @@\n+// ----------------------hero bg - animation----------------------\n+if ($('.gradient-bg').length) {\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const interBubble = document.querySelector('.interactive');\n+    //     let curX = 0;\n+    //     let curY = 0;\n+    //     let tgX = 0;\n+    //     let tgY = 0;\n+\n+    //     const move = () => {\n+    //         curX += (tgX - curX) / 20;\n+    //         curY += (tgY - curY) / 20;\n+    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+    //         requestAnimationFrame(move);\n+    //     };\n+\n+    //     window.addEventListener('mousemove', (event) => {\n+    //         tgX = event.clientX;\n+    //         tgY = event.clientY;\n+    //     });\n+\n+    //     move();\n+    // });\n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Анімація для кожного interactive елемента\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move(); // Запуск анімації\n+    });\n+\n+}\n+\n+\n+$(document).ready(function () {\n+    // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n+\n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n+    }\n+\n+\n+    // ----------------------Success stories----------------------\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+\n+\n+    // ----------------------testimonials----------------------\n+    if ($('.testim-centered').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 2.4,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+\n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+        });\n+    }\n+\n+    // ----------------------Auto tabs----------------------\n+    if ($('.autotabs').length) {\n+        var currentIndex = 0;\n+        var totalTabs = $('.autotabs ul li').length;\n+        var interval;\n+\n+        function switchTab(index) {\n+            // Активний пункт меню\n+            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+            // Зображення\n+            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+            // Тексти\n+            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+        }\n+\n+        function startAutoSwitch() {\n+            interval = setInterval(function () {\n+                currentIndex = (currentIndex + 1) % totalTabs;\n+                switchTab(currentIndex);\n+            }, 5000);\n+        }\n+\n+        startAutoSwitch();\n+\n+        $('.autotabs ul li a').click(function (e) {\n+            e.preventDefault();\n+            clearInterval(interval);\n+            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+            switchTab(currentIndex);\n+        });\n+\n+        switchTab(currentIndex);\n+    }\n+\n+\n+    // ----------------------BANER SLIDER----------------------\n+    if ($('.servbansl').length) {\n+        var swiper = new Swiper(\".servbansl\", {\n+            speed: 1000,\n+            spaceBetween: 20,\n+            loop: true,\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+                clickable: true,\n+            },\n+        });\n+    }\n+\n+    // tech stack\n+    // var swiper = new Swiper(\".techslider\", {\n+    //     slidesPerView: 3,\n+    //     spaceBetween: 30,\n+    //     mousewheel: true,\n+    //     freeMode: true,\n+    //     loop: true,\n+    //     speed: 1000,\n+    //     autoplay: {\n+    //         disableOnInteraction: false,\n+    //         delay: 1,\n+    //     },\n+\n+    // });\n+\n+    var swiper = new Swiper(\".techslider\", {\n+        slidesPerView: 3,\n+        spaceBetween: 30,\n+        mousewheel: true,\n+        freeMode: true,\n+        loop: true,\n+        speed: 1000,\n+        autoplay: {\n+            disableOnInteraction: false,\n+            delay: 2000, // Затримка між слайдами\n+        },\n+    });\n+\n+\n+// Функція для перезапуску автоплей\n+let autoplayTimeout;\n+\n+swiper.el.addEventListener('wheel', () => {\n+    console.log('Mouse wheel event detected. Stopping autoplay.');\n+    swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n+\n+    // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n+    clearTimeout(autoplayTimeout);\n+    autoplayTimeout = setTimeout(() => {\n+        console.log('Restarting autoplay after 2 seconds.');\n+        swiper.autoplay.start(); // Запускаємо автоплей\n+    }, 2000); // Час в мілісекундах (2 секунди)\n+});\n+\n+// Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n+swiper.on('touchStart', () => {\n+    console.log('Touch event detected. Stopping autoplay.');\n+    swiper.autoplay.stop();\n+});\n+swiper.on('touchEnd', () => {\n+    console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n+    clearTimeout(autoplayTimeout);\n+    autoplayTimeout = setTimeout(() => {\n+        swiper.autoplay.start();\n+    }, 2000);\n+});\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729855483764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,242 +176,34 @@\n         },\n     });\n \n \n-// Функція для перезапуску автоплей\n-let autoplayTimeout;\n+    // Функція для перезапуску автоплей\n+    let autoplayTimeout;\n \n-swiper.el.addEventListener('wheel', () => {\n-    console.log('Mouse wheel event detected. Stopping autoplay.');\n-    swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n+    swiper.el.addEventListener('wheel', () => {\n+        console.log('Mouse wheel event detected. Stopping autoplay.');\n+        swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n \n-    // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n-    clearTimeout(autoplayTimeout);\n-    autoplayTimeout = setTimeout(() => {\n-        console.log('Restarting autoplay after 2 seconds.');\n-        swiper.autoplay.start(); // Запускаємо автоплей\n-    }, 2000); // Час в мілісекундах (2 секунди)\n-});\n-\n-// Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n-swiper.on('touchStart', () => {\n-    console.log('Touch event detected. Stopping autoplay.');\n-    swiper.autoplay.stop();\n-});\n-swiper.on('touchEnd', () => {\n-    console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n-    clearTimeout(autoplayTimeout);\n-    autoplayTimeout = setTimeout(() => {\n-        swiper.autoplay.start();\n-    }, 2000);\n-});\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-})\n-// ----------------------hero bg - animation----------------------\n-if ($('.gradient-bg').length) {\n-    // document.addEventListener('DOMContentLoaded', () => {\n-    //     const interBubble = document.querySelector('.interactive');\n-    //     let curX = 0;\n-    //     let curY = 0;\n-    //     let tgX = 0;\n-    //     let tgY = 0;\n-\n-    //     const move = () => {\n-    //         curX += (tgX - curX) / 20;\n-    //         curY += (tgY - curY) / 20;\n-    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-    //         requestAnimationFrame(move);\n-    //     };\n-\n-    //     window.addEventListener('mousemove', (event) => {\n-    //         tgX = event.clientX;\n-    //         tgY = event.clientY;\n-    //     });\n-\n-    //     move();\n-    // });\n-    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n-\n-    interBubbles.forEach((interBubble) => {\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        // Анімація для кожного interactive елемента\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n-\n-        move(); // Запуск анімації\n+        // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n+        clearTimeout(autoplayTimeout);\n+        autoplayTimeout = setTimeout(() => {\n+            console.log('Restarting autoplay after 2 seconds.');\n+            swiper.autoplay.start(); // Запускаємо автоплей\n+        }, 2000); // Час в мілісекундах (2 секунди)\n     });\n \n-}\n-\n-\n-$(document).ready(function () {\n-    // ----------------------hero cards - animation----------------------\n-    if ($('.services__hero').length) {\n-        let cards = document.querySelectorAll('.servheroinfo');\n-        let parent = document.querySelector('.services__hero');\n-\n-        parent.addEventListener('mousemove', function (e) {\n-            let rect = parent.getBoundingClientRect();\n-\n-            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-            cards.forEach(card => {\n-                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-            });\n-        });\n-    }\n-\n-\n-    // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n-\n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n-\n-\n-    // ----------------------testimonials----------------------\n-    if ($('.testim-centered').length) {\n-        var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 2.4,\n-            spaceBetween: 0,\n-            centeredSlides: true,\n-            loop: true,\n-            speed: 1000,\n-\n-            navigation: {\n-                nextEl: \".swiper-button-next-t\",\n-                prevEl: \".swiper-button-prev-t\",\n-            },\n-        });\n-    }\n-\n-    // ----------------------Auto tabs----------------------\n-    if ($('.autotabs').length) {\n-        var currentIndex = 0;\n-        var totalTabs = $('.autotabs ul li').length;\n-        var interval;\n-\n-        function switchTab(index) {\n-            // Активний пункт меню\n-            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-            // Зображення\n-            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-            // Тексти\n-            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-        }\n-\n-        function startAutoSwitch() {\n-            interval = setInterval(function () {\n-                currentIndex = (currentIndex + 1) % totalTabs;\n-                switchTab(currentIndex);\n-            }, 5000);\n-        }\n-\n-        startAutoSwitch();\n-\n-        $('.autotabs ul li a').click(function (e) {\n-            e.preventDefault();\n-            clearInterval(interval);\n-            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-            switchTab(currentIndex);\n-        });\n-\n-        switchTab(currentIndex);\n-    }\n-\n-\n-    // ----------------------BANER SLIDER----------------------\n-    if ($('.servbansl').length) {\n-        var swiper = new Swiper(\".servbansl\", {\n-            speed: 1000,\n-            spaceBetween: 20,\n-            loop: true,\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-                clickable: true,\n-            },\n-        });\n-    }\n-\n-    // tech stack\n-    // var swiper = new Swiper(\".techslider\", {\n-    //     slidesPerView: 3,\n-    //     spaceBetween: 30,\n-    //     mousewheel: true,\n-    //     freeMode: true,\n-    //     loop: true,\n-    //     speed: 1000,\n-    //     autoplay: {\n-    //         disableOnInteraction: false,\n-    //         delay: 1,\n-    //     },\n-\n-    // });\n-\n-    var swiper = new Swiper(\".techslider\", {\n-        slidesPerView: 3,\n-        spaceBetween: 30,\n-        mousewheel: true,\n-        freeMode: true,\n-        loop: true,\n-        speed: 1000,\n-        autoplay: {\n-            disableOnInteraction: false,\n-            delay: 1,\n-        },\n+    // Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n+    swiper.on('touchStart', () => {\n+        console.log('Touch event detected. Stopping autoplay.');\n+        swiper.autoplay.stop();\n     });\n-    \n-    // Функція для перезапуску автоплей\n-    let autoplayTimeout;\n-    \n-    swiper.el.addEventListener('wheel', () => {\n-        // Зупиняємо автоплей при прокручуванні мишкою\n-        swiper.autoplay.stop();\n-    \n-        // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n+    swiper.on('touchEnd', () => {\n+        console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n         clearTimeout(autoplayTimeout);\n         autoplayTimeout = setTimeout(() => {\n             swiper.autoplay.start();\n-        }, 2000); // Час в мілісекундах (2 секунди)\n+        }, 2000);\n     });\n \n \n \n@@ -427,9 +219,5 @@\n \n \n \n \n-\n-\n-\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729855491784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,22 +148,9 @@\n         });\n     }\n \n     // tech stack\n-    // var swiper = new Swiper(\".techslider\", {\n-    //     slidesPerView: 3,\n-    //     spaceBetween: 30,\n-    //     mousewheel: true,\n-    //     freeMode: true,\n-    //     loop: true,\n-    //     speed: 1000,\n-    //     autoplay: {\n-    //         disableOnInteraction: false,\n-    //         delay: 1,\n-    //     },\n \n-    // });\n-\n     var swiper = new Swiper(\".techslider\", {\n         slidesPerView: 3,\n         spaceBetween: 30,\n         mousewheel: true,\n@@ -171,9 +158,9 @@\n         loop: true,\n         speed: 1000,\n         autoplay: {\n             disableOnInteraction: false,\n-            delay: 2000, // Затримка між слайдами\n+            delay: 2000, \n         },\n     });\n \n \n"
                },
                {
                    "date": 1729855497076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,8 @@\n             delay: 2000, \n         },\n     });\n \n-\n     // Функція для перезапуску автоплей\n     let autoplayTimeout;\n \n     swiper.el.addEventListener('wheel', () => {\n"
                },
                {
                    "date": 1729855606292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,12 +156,12 @@\n         mousewheel: true,\n         freeMode: true,\n         loop: true,\n         speed: 1000,\n-        autoplay: {\n-            disableOnInteraction: false,\n-            delay: 2000, \n-        },\n+        // autoplay: {\n+        //     disableOnInteraction: false,\n+        //     delay: 2000, \n+        // },\n     });\n \n     // Функція для перезапуску автоплей\n     let autoplayTimeout;\n"
                },
                {
                    "date": 1729855967711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n     // tech stack\n \n     var swiper = new Swiper(\".techslider\", {\n         slidesPerView: 3,\n-        spaceBetween: 30,\n+        spaceBetween: 16,\n         mousewheel: true,\n         freeMode: true,\n         loop: true,\n         speed: 1000,\n"
                },
                {
                    "date": 1729857471977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,53 +148,64 @@\n         });\n     }\n \n     // tech stack\n+    if ($('.techslider').length) {\n+        var swiper = new Swiper(\".techslider\", {\n+            slidesPerView: 3,\n+            spaceBetween: 16,\n+            mousewheel: true,\n+            freeMode: true,\n+            loop: true,\n+            speed: 1000,\n+            // autoplay: {\n+            //     disableOnInteraction: false,\n+            //     delay: 2000, \n+            // },\n+        });\n \n-    var swiper = new Swiper(\".techslider\", {\n-        slidesPerView: 3,\n-        spaceBetween: 16,\n-        mousewheel: true,\n-        freeMode: true,\n-        loop: true,\n-        speed: 1000,\n-        // autoplay: {\n-        //     disableOnInteraction: false,\n-        //     delay: 2000, \n-        // },\n-    });\n+        // Функція для перезапуску автоплей\n+        let autoplayTimeout;\n \n-    // Функція для перезапуску автоплей\n-    let autoplayTimeout;\n+        swiper.el.addEventListener('wheel', () => {\n+            console.log('Mouse wheel event detected. Stopping autoplay.');\n+            swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n \n-    swiper.el.addEventListener('wheel', () => {\n-        console.log('Mouse wheel event detected. Stopping autoplay.');\n-        swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n+            // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n+            clearTimeout(autoplayTimeout);\n+            autoplayTimeout = setTimeout(() => {\n+                console.log('Restarting autoplay after 2 seconds.');\n+                swiper.autoplay.start(); // Запускаємо автоплей\n+            }, 2000); // Час в мілісекундах (2 секунди)\n+        });\n \n-        // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n-        clearTimeout(autoplayTimeout);\n-        autoplayTimeout = setTimeout(() => {\n-            console.log('Restarting autoplay after 2 seconds.');\n-            swiper.autoplay.start(); // Запускаємо автоплей\n-        }, 2000); // Час в мілісекундах (2 секунди)\n-    });\n+        // Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n+        swiper.on('touchStart', () => {\n+            console.log('Touch event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+        });\n+        swiper.on('touchEnd', () => {\n+            console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n+            clearTimeout(autoplayTimeout);\n+            autoplayTimeout = setTimeout(() => {\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n+    }\n \n-    // Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n-    swiper.on('touchStart', () => {\n-        console.log('Touch event detected. Stopping autoplay.');\n-        swiper.autoplay.stop();\n-    });\n-    swiper.on('touchEnd', () => {\n-        console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n-        clearTimeout(autoplayTimeout);\n-        autoplayTimeout = setTimeout(() => {\n-            swiper.autoplay.start();\n-        }, 2000);\n-    });\n \n \n \n+    const hovercards = document.querySelectorAll('.hovercard');\n \n+    hovercards.forEach(card => {\n+        card.addEventListener('mouseenter', () => {\n+            // Знімаємо клас active з усіх карток\n+            hovercards.forEach(c => c.classList.remove('active'));\n+            // Додаємо клас active до поточної картки\n+            card.classList.add('active');\n+        });\n+    });\n \n \n \n \n@@ -205,5 +216,7 @@\n \n \n \n \n+\n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729857672595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,19 +193,21 @@\n     }\n \n \n \n+    if ($('.techslider').length) {\n+        const hovercards = document.querySelectorAll('.hovercard');\n \n-    const hovercards = document.querySelectorAll('.hovercard');\n-\n-    hovercards.forEach(card => {\n-        card.addEventListener('mouseenter', () => {\n-            // Знімаємо клас active з усіх карток\n-            hovercards.forEach(c => c.classList.remove('active'));\n-            // Додаємо клас active до поточної картки\n-            card.classList.add('active');\n+        hovercards.forEach(card => {\n+            card.addEventListener('mouseenter', () => {\n+                // Знімаємо клас active з усіх карток\n+                hovercards.forEach(c => c.classList.remove('active'));\n+                // Додаємо клас active до поточної картки\n+                card.classList.add('active');\n+            });\n         });\n-    });\n+    }\n+    \n \n \n \n \n"
                },
                {
                    "date": 1729865556276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,13 +189,9 @@\n             autoplayTimeout = setTimeout(() => {\n                 swiper.autoplay.start();\n             }, 2000);\n         });\n-    }\n \n-\n-\n-    if ($('.techslider').length) {\n         const hovercards = document.querySelectorAll('.hovercard');\n \n         hovercards.forEach(card => {\n             card.addEventListener('mouseenter', () => {\n@@ -205,8 +201,12 @@\n                 card.classList.add('active');\n             });\n         });\n     }\n+\n+\n+\n+       \n     \n \n \n \n"
                },
                {
                    "date": 1729865570833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,12 +156,12 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            // autoplay: {\n-            //     disableOnInteraction: false,\n-            //     delay: 2000, \n-            // },\n+            autoplay: {\n+                disableOnInteraction: false,\n+                delay: 2000, \n+            },\n         });\n \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n"
                },
                {
                    "date": 1729865619443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,12 +156,12 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            autoplay: {\n-                disableOnInteraction: false,\n-                delay: 2000, \n-            },\n+            // autoplay: {\n+            //     disableOnInteraction: false,\n+            //     delay: 2000, \n+            // },\n         });\n \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n@@ -189,9 +189,12 @@\n             autoplayTimeout = setTimeout(() => {\n                 swiper.autoplay.start();\n             }, 2000);\n         });\n+    }\n \n+\n+\n         const hovercards = document.querySelectorAll('.hovercard');\n \n         hovercards.forEach(card => {\n             card.addEventListener('mouseenter', () => {\n@@ -200,13 +203,8 @@\n                 // Додаємо клас active до поточної картки\n                 card.classList.add('active');\n             });\n         });\n-    }\n-\n-\n-\n-       \n     \n \n \n \n"
                },
                {
                    "date": 1729865666674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,40 +156,41 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            // autoplay: {\n-            //     disableOnInteraction: false,\n-            //     delay: 2000, \n-            // },\n+            autoplay: {\n+                disableOnInteraction: false, // Відновлює autoplay після взаємодії\n+                delay: 2000, // Затримка перед наступною автоматичною прокруткою (2 секунди)\n+            },\n         });\n-\n+    \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n-\n+    \n         swiper.el.addEventListener('wheel', () => {\n             console.log('Mouse wheel event detected. Stopping autoplay.');\n             swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n-\n+    \n             // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n                 console.log('Restarting autoplay after 2 seconds.');\n                 swiper.autoplay.start(); // Запускаємо автоплей\n             }, 2000); // Час в мілісекундах (2 секунди)\n         });\n-\n-        // Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n+    \n+        // Додаткове оброблення події, щоб також зупинити автоплей при дотику\n         swiper.on('touchStart', () => {\n             console.log('Touch event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n+            swiper.autoplay.stop(); // Зупиняємо autoplay при дотику\n         });\n+    \n         swiper.on('touchEnd', () => {\n             console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n-                swiper.autoplay.start();\n-            }, 2000);\n+                swiper.autoplay.start(); // Перезапускаємо autoplay через 2 секунди після завершення дотику\n+            }, 2000); // Час в мілісекундах\n         });\n     }\n \n \n"
                },
                {
                    "date": 1729865691504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,41 +156,40 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            autoplay: {\n-                disableOnInteraction: false, // Відновлює autoplay після взаємодії\n-                delay: 2000, // Затримка перед наступною автоматичною прокруткою (2 секунди)\n-            },\n+            // autoplay: {\n+            //     disableOnInteraction: false,\n+            //     delay: 2000, \n+            // },\n         });\n-    \n+\n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n-    \n+\n         swiper.el.addEventListener('wheel', () => {\n             console.log('Mouse wheel event detected. Stopping autoplay.');\n             swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n-    \n+\n             // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n                 console.log('Restarting autoplay after 2 seconds.');\n                 swiper.autoplay.start(); // Запускаємо автоплей\n             }, 2000); // Час в мілісекундах (2 секунди)\n         });\n-    \n-        // Додаткове оброблення події, щоб також зупинити автоплей при дотику\n+\n+        // Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n         swiper.on('touchStart', () => {\n             console.log('Touch event detected. Stopping autoplay.');\n-            swiper.autoplay.stop(); // Зупиняємо autoplay при дотику\n+            swiper.autoplay.stop();\n         });\n-    \n         swiper.on('touchEnd', () => {\n             console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n-                swiper.autoplay.start(); // Перезапускаємо autoplay через 2 секунди після завершення дотику\n-            }, 2000); // Час в мілісекундах\n+                swiper.autoplay.start();\n+            }, 2000);\n         });\n     }\n \n \n"
                },
                {
                    "date": 1729865733212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,34 +156,37 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            // autoplay: {\n-            //     disableOnInteraction: false,\n-            //     delay: 2000, \n-            // },\n+            autoplay: {\n+                delay: 2000, // Слайди будуть мінятись кожні 2 секунди\n+                disableOnInteraction: false, // Автоплей продовжиться після взаємодії\n+            },\n         });\n-\n+    \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n-\n+    \n+        // Зупиняємо autoplay при скролі мишкою\n         swiper.el.addEventListener('wheel', () => {\n             console.log('Mouse wheel event detected. Stopping autoplay.');\n-            swiper.autoplay.stop(); // Зупиняємо автоплей при прокручуванні мишкою\n-\n-            // Перезапускаємо автоплей через 2 секунди після зупинки прокручування\n+            swiper.autoplay.stop();\n+    \n             clearTimeout(autoplayTimeout);\n+            // Перезапуск через 2 секунди після зупинки прокручування\n             autoplayTimeout = setTimeout(() => {\n                 console.log('Restarting autoplay after 2 seconds.');\n-                swiper.autoplay.start(); // Запускаємо автоплей\n-            }, 2000); // Час в мілісекундах (2 секунди)\n+                swiper.autoplay.start();\n+            }, 2000);\n         });\n-\n-        // Додаткове оброблення події, щоб також зупинити автоплей при взаємодії\n+    \n+        // Зупиняємо autoplay при дотику\n         swiper.on('touchStart', () => {\n             console.log('Touch event detected. Stopping autoplay.');\n             swiper.autoplay.stop();\n         });\n+    \n+        // Перезапуск autoplay через 2 секунди після дотику\n         swiper.on('touchEnd', () => {\n             console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n"
                },
                {
                    "date": 1729865770902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,8 @@\n         });\n     \n         // Перезапуск autoplay через 2 секунди після дотику\n         swiper.on('touchEnd', () => {\n-            console.log('Touch event ended. Restarting autoplay after 2 seconds.');\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n                 swiper.autoplay.start();\n             }, 2000);\n"
                },
                {
                    "date": 1729865787718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,36 +163,9 @@\n             },\n         });\n     \n         // Функція для перезапуску автоплей\n-        let autoplayTimeout;\n-    \n-        // Зупиняємо autoplay при скролі мишкою\n-        swiper.el.addEventListener('wheel', () => {\n-            console.log('Mouse wheel event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n-    \n-            clearTimeout(autoplayTimeout);\n-            // Перезапуск через 2 секунди після зупинки прокручування\n-            autoplayTimeout = setTimeout(() => {\n-                console.log('Restarting autoplay after 2 seconds.');\n-                swiper.autoplay.start();\n-            }, 2000);\n-        });\n-    \n-        // Зупиняємо autoplay при дотику\n-        swiper.on('touchStart', () => {\n-            console.log('Touch event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n-        });\n-    \n-        // Перезапуск autoplay через 2 секунди після дотику\n-        swiper.on('touchEnd', () => {\n-            clearTimeout(autoplayTimeout);\n-            autoplayTimeout = setTimeout(() => {\n-                swiper.autoplay.start();\n-            }, 2000);\n-        });\n+     \n     }\n \n \n \n"
                },
                {
                    "date": 1729865835250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,36 @@\n             },\n         });\n     \n         // Функція для перезапуску автоплей\n-     \n+        let autoplayTimeout;\n+    \n+        // Зупиняємо autoplay при скролі мишкою\n+        swiper.el.addEventListener('wheel', () => {\n+            console.log('Mouse wheel event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+    \n+            clearTimeout(autoplayTimeout);\n+            // Перезапуск через 2 секунди після зупинки прокручування\n+            autoplayTimeout = setTimeout(() => {\n+                console.log('Restarting autoplay after 2 seconds.');\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n+    \n+        // Зупиняємо autoplay при дотику\n+        swiper.on('touchStart', () => {\n+            console.log('Touch event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+        });\n+    \n+        // Перезапуск autoplay через 2 секунди після дотику\n+        swiper.on('touchEnd', () => {\n+            clearTimeout(autoplayTimeout);\n+            autoplayTimeout = setTimeout(() => {\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n     }\n \n \n \n"
                },
                {
                    "date": 1730015677147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,31 +161,31 @@\n                 delay: 2000, // Слайди будуть мінятись кожні 2 секунди\n                 disableOnInteraction: false, // Автоплей продовжиться після взаємодії\n             },\n         });\n-    \n+\n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n-    \n+\n         // Зупиняємо autoplay при скролі мишкою\n         swiper.el.addEventListener('wheel', () => {\n             console.log('Mouse wheel event detected. Stopping autoplay.');\n             swiper.autoplay.stop();\n-    \n+\n             clearTimeout(autoplayTimeout);\n             // Перезапуск через 2 секунди після зупинки прокручування\n             autoplayTimeout = setTimeout(() => {\n                 console.log('Restarting autoplay after 2 seconds.');\n                 swiper.autoplay.start();\n             }, 2000);\n         });\n-    \n+\n         // Зупиняємо autoplay при дотику\n         swiper.on('touchStart', () => {\n             console.log('Touch event detected. Stopping autoplay.');\n             swiper.autoplay.stop();\n         });\n-    \n+\n         // Перезапуск autoplay через 2 секунди після дотику\n         swiper.on('touchEnd', () => {\n             clearTimeout(autoplayTimeout);\n             autoplayTimeout = setTimeout(() => {\n@@ -195,19 +195,18 @@\n     }\n \n \n \n-        const hovercards = document.querySelectorAll('.hovercard');\n+    const hovercards = document.querySelectorAll('.hovercard');\n \n-        hovercards.forEach(card => {\n-            card.addEventListener('mouseenter', () => {\n-                // Знімаємо клас active з усіх карток\n-                hovercards.forEach(c => c.classList.remove('active'));\n-                // Додаємо клас active до поточної картки\n-                card.classList.add('active');\n-            });\n+    hovercards.forEach(card => {\n+        card.addEventListener('mouseenter', () => {\n+            // Знімаємо клас active з усіх карток\n+            hovercards.forEach(c => c.classList.remove('active'));\n+            // Додаємо клас active до поточної картки\n+            card.classList.add('active');\n         });\n-    \n+    });\n \n \n \n \n@@ -220,5 +219,6 @@\n \n \n \n \n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730015772316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n \n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n         var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 2.4,\n+            \n             spaceBetween: 0,\n             centeredSlides: true,\n             loop: true,\n             speed: 1000,\n@@ -93,8 +93,19 @@\n             navigation: {\n                 nextEl: \".swiper-button-next-t\",\n                 prevEl: \".swiper-button-prev-t\",\n             },\n+\n+            breakpoints: {\n+                // 640: {\n+                //   slidesPerView: 2,\n+                //   spaceBetween: 20,\n+                // },\n+                1400: {\n+                    slidesPerView: 2.4,\n+                },\n+               \n+              },\n         });\n     }\n \n     // ----------------------Auto tabs----------------------\n"
                },
                {
                    "date": 1730015798689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,12 +95,12 @@\n                 prevEl: \".swiper-button-prev-t\",\n             },\n \n             breakpoints: {\n-                // 640: {\n-                //   slidesPerView: 2,\n-                //   spaceBetween: 20,\n-                // },\n+                992: {\n+                  slidesPerView: 2,\n+                  spaceBetween: 20,\n+                },\n                 1400: {\n                     slidesPerView: 2.4,\n                 },\n                \n"
                },
                {
                    "date": 1730015843290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n             },\n \n             breakpoints: {\n                 992: {\n-                  slidesPerView: 2,\n+                  slidesPerView: 1.5,\n                   spaceBetween: 20,\n                 },\n                 1400: {\n                     slidesPerView: 2.4,\n"
                },
                {
                    "date": 1730015873233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,8 @@\n \n             breakpoints: {\n                 992: {\n                   slidesPerView: 1.5,\n-                  spaceBetween: 20,\n                 },\n                 1400: {\n                     slidesPerView: 2.4,\n                 },\n"
                },
                {
                    "date": 1730016824447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,12 +166,12 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            autoplay: {\n-                delay: 2000, // Слайди будуть мінятись кожні 2 секунди\n-                disableOnInteraction: false, // Автоплей продовжиться після взаємодії\n-            },\n+            // autoplay: {\n+            //     delay: 2000, \n+            //     disableOnInteraction: false, \n+            // },\n         });\n \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n"
                },
                {
                    "date": 1730017022297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,12 +166,12 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            // autoplay: {\n-            //     delay: 2000, \n-            //     disableOnInteraction: false, \n-            // },\n+            autoplay: {\n+                delay: 2000, \n+                disableOnInteraction: false, \n+            },\n         });\n \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n"
                },
                {
                    "date": 1730017150468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,17 @@\n             autoplay: {\n                 delay: 2000, \n                 disableOnInteraction: false, \n             },\n+            breakpoints: {\n+                992: {\n+                  slidesPerView: 2.8,\n+                },\n+                1400: {\n+                    slidesPerView: 3,\n+                },\n+               \n+              },\n         });\n \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n"
                },
                {
                    "date": 1730018057218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,8 +172,11 @@\n                 disableOnInteraction: false, \n             },\n             breakpoints: {\n                 992: {\n+                    slidesPerView: 2.4,\n+                  },\n+                1200: {\n                   slidesPerView: 2.8,\n                 },\n                 1400: {\n                     slidesPerView: 3,\n"
                },
                {
                    "date": 1730018062701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n                 disableOnInteraction: false, \n             },\n             breakpoints: {\n                 992: {\n-                    slidesPerView: 2.4,\n+                    slidesPerView: 2.6,\n                   },\n                 1200: {\n                   slidesPerView: 2.8,\n                 },\n"
                },
                {
                    "date": 1730019235684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n \n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n         var swiper = new Swiper(\".testim-centered\", {\n-            \n+            slidesPerView: 1,\n             spaceBetween: 0,\n             centeredSlides: true,\n             loop: true,\n             speed: 1000,\n@@ -95,8 +95,9 @@\n                 prevEl: \".swiper-button-prev-t\",\n             },\n \n             breakpoints: {\n+\n                 992: {\n                   slidesPerView: 1.5,\n                 },\n                 1400: {\n@@ -172,9 +173,9 @@\n                 disableOnInteraction: false, \n             },\n             breakpoints: {\n                 992: {\n-                    slidesPerView: 2.6,\n+                    slidesPerView: 2.2,\n                   },\n                 1200: {\n                   slidesPerView: 2.8,\n                 },\n"
                },
                {
                    "date": 1730021322053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n \n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n         var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 1,\n+            slidesPerView: 1.1,\n             spaceBetween: 0,\n             centeredSlides: true,\n             loop: true,\n             speed: 1000,\n@@ -97,15 +97,15 @@\n \n             breakpoints: {\n \n                 992: {\n-                  slidesPerView: 1.5,\n+                    slidesPerView: 1.5,\n                 },\n                 1400: {\n                     slidesPerView: 2.4,\n                 },\n-               \n-              },\n+\n+            },\n         });\n     }\n \n     // ----------------------Auto tabs----------------------\n@@ -168,23 +168,30 @@\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n             autoplay: {\n-                delay: 2000, \n-                disableOnInteraction: false, \n+                delay: 2000,\n+                disableOnInteraction: false,\n             },\n             breakpoints: {\n+                768: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 50,\n+                },\n                 992: {\n                     slidesPerView: 2.2,\n-                  },\n+                    spaceBetween: 16,\n+                },\n                 1200: {\n-                  slidesPerView: 2.8,\n+                    slidesPerView: 2.8,\n+                    spaceBetween: 16,\n                 },\n                 1400: {\n                     slidesPerView: 3,\n+                    spaceBetween: 16,\n                 },\n-               \n-              },\n+\n+            },\n         });\n \n         // Функція для перезапуску автоплей\n         let autoplayTimeout;\n"
                },
                {
                    "date": 1730021330251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,9 @@\n                 disableOnInteraction: false,\n             },\n             breakpoints: {\n                 768: {\n-                    slidesPerView: 2.2,\n+                    slidesPerView: 3,\n                     spaceBetween: 50,\n                 },\n                 992: {\n                     slidesPerView: 2.2,\n"
                },
                {
                    "date": 1730023630617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,8 +173,12 @@\n                 disableOnInteraction: false,\n             },\n             breakpoints: {\n                 768: {\n+                    slidesPerView: 2,\n+                    spaceBetween: 50,\n+                },\n+                768: {\n                     slidesPerView: 3,\n                     spaceBetween: 50,\n                 },\n                 992: {\n"
                },
                {
                    "date": 1730023641461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n                 delay: 2000,\n                 disableOnInteraction: false,\n             },\n             breakpoints: {\n-                768: {\n+                576: {\n                     slidesPerView: 2,\n                     spaceBetween: 50,\n                 },\n                 768: {\n"
                },
                {
                    "date": 1730023651347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,10 +173,10 @@\n                 disableOnInteraction: false,\n             },\n             breakpoints: {\n                 576: {\n-                    slidesPerView: 2,\n-                    spaceBetween: 50,\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 30,\n                 },\n                 768: {\n                     slidesPerView: 3,\n                     spaceBetween: 50,\n"
                },
                {
                    "date": 1730024750549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,12 @@\n                 nextEl: \".swiper-button-next-t\",\n                 prevEl: \".swiper-button-prev-t\",\n             },\n \n+            pagination: {\n+                el: \".swiper-pagination\",\n+            },\n+\n             breakpoints: {\n \n                 992: {\n                     slidesPerView: 1.5,\n"
                },
                {
                    "date": 1730024988799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,12 +99,14 @@\n                 el: \".swiper-pagination\",\n             },\n \n             breakpoints: {\n-\n-                992: {\n+                400: {\n                     slidesPerView: 1.5,\n                 },\n+                576: {\n+                    slidesPerView: 1.5,\n+                },\n                 1400: {\n                     slidesPerView: 2.4,\n                 },\n \n"
                },
                {
                    "date": 1730024994444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n             },\n \n             breakpoints: {\n                 400: {\n-                    slidesPerView: 1.5,\n+                    slidesPerView: 1.4,\n                 },\n                 576: {\n                     slidesPerView: 1.5,\n                 },\n"
                },
                {
                    "date": 1730026094072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,12 +173,12 @@\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n             speed: 1000,\n-            autoplay: {\n-                delay: 2000,\n-                disableOnInteraction: false,\n-            },\n+            // autoplay: {\n+            //     delay: 2000,\n+            //     disableOnInteraction: false,\n+            // },\n             breakpoints: {\n                 576: {\n                     slidesPerView: 2.2,\n                     spaceBetween: 30,\n"
                },
                {
                    "date": 1730026113321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,8 +178,12 @@\n             //     delay: 2000,\n             //     disableOnInteraction: false,\n             // },\n             breakpoints: {\n+                480: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 30,\n+                },\n                 576: {\n                     slidesPerView: 2.2,\n                     spaceBetween: 30,\n                 },\n"
                },
                {
                    "date": 1730026129176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n             // },\n             breakpoints: {\n                 480: {\n                     slidesPerView: 2.2,\n-                    spaceBetween: 30,\n+                    spaceBetween: 16,\n                 },\n                 576: {\n                     slidesPerView: 2.2,\n                     spaceBetween: 30,\n"
                },
                {
                    "date": 1730026523366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -239,19 +239,38 @@\n     }\n \n \n \n+    // const hovercards = document.querySelectorAll('.hovercard');\n+\n+    // hovercards.forEach(card => {\n+    //     card.addEventListener('mouseenter', () => {\n+    //         // Знімаємо клас active з усіх карток\n+    //         hovercards.forEach(c => c.classList.remove('active'));\n+    //         // Додаємо клас active до поточної картки\n+    //         card.classList.add('active');\n+    //     });\n+    // });\n+\n     const hovercards = document.querySelectorAll('.hovercard');\n \n-    hovercards.forEach(card => {\n-        card.addEventListener('mouseenter', () => {\n-            // Знімаємо клас active з усіх карток\n-            hovercards.forEach(c => c.classList.remove('active'));\n-            // Додаємо клас active до поточної картки\n-            card.classList.add('active');\n-        });\n+hovercards.forEach(card => {\n+    // Обробник наведення курсора\n+    card.addEventListener('mouseenter', () => {\n+        // Знімаємо клас active з усіх карток\n+        hovercards.forEach(c => c.classList.remove('active'));\n+        // Додаємо клас active до поточної картки\n+        card.classList.add('active');\n     });\n \n+    // Обробник кліку\n+    card.addEventListener('click', () => {\n+        // Знімаємо клас active з усіх карток\n+        hovercards.forEach(c => c.classList.remove('active'));\n+        // Додаємо клас active до поточної картки\n+        card.classList.add('active');\n+    });\n+});\n \n \n \n \n@@ -264,5 +283,7 @@\n \n \n \n \n+\n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730107858629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n \n     // tech stack\n     if ($('.techslider').length) {\n         var swiper = new Swiper(\".techslider\", {\n-            slidesPerView: 3,\n+            slidesPerView: 2.2,\n             spaceBetween: 16,\n             mousewheel: true,\n             freeMode: true,\n             loop: true,\n"
                },
                {
                    "date": 1730107875859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+// ----------------------hero bg - animation----------------------\n+if ($('.gradient-bg').length) {\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const interBubble = document.querySelector('.interactive');\n+    //     let curX = 0;\n+    //     let curY = 0;\n+    //     let tgX = 0;\n+    //     let tgY = 0;\n+\n+    //     const move = () => {\n+    //         curX += (tgX - curX) / 20;\n+    //         curY += (tgY - curY) / 20;\n+    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+    //         requestAnimationFrame(move);\n+    //     };\n+\n+    //     window.addEventListener('mousemove', (event) => {\n+    //         tgX = event.clientX;\n+    //         tgY = event.clientY;\n+    //     });\n+\n+    //     move();\n+    // });\n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Анімація для кожного interactive елемента\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move(); // Запуск анімації\n+    });\n+\n+}\n+\n+\n+$(document).ready(function () {\n+    // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n+\n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n+    }\n+\n+\n+    // ----------------------Success stories----------------------\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+\n+\n+    // ----------------------testimonials----------------------\n+    if ($('.testim-centered').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 1.1,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+\n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+            },\n+\n+            breakpoints: {\n+                400: {\n+                    slidesPerView: 1.4,\n+                },\n+                576: {\n+                    slidesPerView: 1.5,\n+                },\n+                1400: {\n+                    slidesPerView: 2.4,\n+                },\n+\n+            },\n+        });\n+    }\n+\n+    // ----------------------Auto tabs----------------------\n+    if ($('.autotabs').length) {\n+        var currentIndex = 0;\n+        var totalTabs = $('.autotabs ul li').length;\n+        var interval;\n+\n+        function switchTab(index) {\n+            // Активний пункт меню\n+            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+            // Зображення\n+            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+            // Тексти\n+            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+        }\n+\n+        function startAutoSwitch() {\n+            interval = setInterval(function () {\n+                currentIndex = (currentIndex + 1) % totalTabs;\n+                switchTab(currentIndex);\n+            }, 5000);\n+        }\n+\n+        startAutoSwitch();\n+\n+        $('.autotabs ul li a').click(function (e) {\n+            e.preventDefault();\n+            clearInterval(interval);\n+            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+            switchTab(currentIndex);\n+        });\n+\n+        switchTab(currentIndex);\n+    }\n+\n+\n+    // ----------------------BANER SLIDER----------------------\n+    if ($('.servbansl').length) {\n+        var swiper = new Swiper(\".servbansl\", {\n+            speed: 1000,\n+            spaceBetween: 20,\n+            loop: true,\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+                clickable: true,\n+            },\n+        });\n+    }\n+\n+    // tech stack\n+    if ($('.techslider').length) {\n+        var swiper = new Swiper(\".techslider\", {\n+            slidesPerView: 2.3,\n+            spaceBetween: 16,\n+            mousewheel: true,\n+            freeMode: true,\n+            loop: true,\n+            speed: 1000,\n+            // autoplay: {\n+            //     delay: 2000,\n+            //     disableOnInteraction: false,\n+            // },\n+            breakpoints: {\n+                480: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 16,\n+                },\n+                576: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 30,\n+                },\n+                768: {\n+                    slidesPerView: 3,\n+                    spaceBetween: 50,\n+                },\n+                992: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 16,\n+                },\n+                1200: {\n+                    slidesPerView: 2.8,\n+                    spaceBetween: 16,\n+                },\n+                1400: {\n+                    slidesPerView: 3,\n+                    spaceBetween: 16,\n+                },\n+\n+            },\n+        });\n+\n+        // Функція для перезапуску автоплей\n+        let autoplayTimeout;\n+\n+        // Зупиняємо autoplay при скролі мишкою\n+        swiper.el.addEventListener('wheel', () => {\n+            console.log('Mouse wheel event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+\n+            clearTimeout(autoplayTimeout);\n+            // Перезапуск через 2 секунди після зупинки прокручування\n+            autoplayTimeout = setTimeout(() => {\n+                console.log('Restarting autoplay after 2 seconds.');\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n+\n+        // Зупиняємо autoplay при дотику\n+        swiper.on('touchStart', () => {\n+            console.log('Touch event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+        });\n+\n+        // Перезапуск autoplay через 2 секунди після дотику\n+        swiper.on('touchEnd', () => {\n+            clearTimeout(autoplayTimeout);\n+            autoplayTimeout = setTimeout(() => {\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n+    }\n+\n+\n+\n+    // const hovercards = document.querySelectorAll('.hovercard');\n+\n+    // hovercards.forEach(card => {\n+    //     card.addEventListener('mouseenter', () => {\n+    //         // Знімаємо клас active з усіх карток\n+    //         hovercards.forEach(c => c.classList.remove('active'));\n+    //         // Додаємо клас active до поточної картки\n+    //         card.classList.add('active');\n+    //     });\n+    // });\n+\n+    const hovercards = document.querySelectorAll('.hovercard');\n+\n+hovercards.forEach(card => {\n+    // Обробник наведення курсора\n+    card.addEventListener('mouseenter', () => {\n+        // Знімаємо клас active з усіх карток\n+        hovercards.forEach(c => c.classList.remove('active'));\n+        // Додаємо клас active до поточної картки\n+        card.classList.add('active');\n+    });\n+\n+    // Обробник кліку\n+    card.addEventListener('click', () => {\n+        // Знімаємо клас active з усіх карток\n+        hovercards.forEach(c => c.classList.remove('active'));\n+        // Додаємо клас active до поточної картки\n+        card.classList.add('active');\n+    });\n+});\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730108080303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,314 +252,26 @@\n     // });\n \n     const hovercards = document.querySelectorAll('.hovercard');\n \n-hovercards.forEach(card => {\n-    // Обробник наведення курсора\n-    card.addEventListener('mouseenter', () => {\n-        // Знімаємо клас active з усіх карток\n-        hovercards.forEach(c => c.classList.remove('active'));\n-        // Додаємо клас active до поточної картки\n-        card.classList.add('active');\n-    });\n-\n-    // Обробник кліку\n-    card.addEventListener('click', () => {\n-        // Знімаємо клас active з усіх карток\n-        hovercards.forEach(c => c.classList.remove('active'));\n-        // Додаємо клас active до поточної картки\n-        card.classList.add('active');\n-    });\n-});\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-})\n-// ----------------------hero bg - animation----------------------\n-if ($('.gradient-bg').length) {\n-    // document.addEventListener('DOMContentLoaded', () => {\n-    //     const interBubble = document.querySelector('.interactive');\n-    //     let curX = 0;\n-    //     let curY = 0;\n-    //     let tgX = 0;\n-    //     let tgY = 0;\n-\n-    //     const move = () => {\n-    //         curX += (tgX - curX) / 20;\n-    //         curY += (tgY - curY) / 20;\n-    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-    //         requestAnimationFrame(move);\n-    //     };\n-\n-    //     window.addEventListener('mousemove', (event) => {\n-    //         tgX = event.clientX;\n-    //         tgY = event.clientY;\n-    //     });\n-\n-    //     move();\n-    // });\n-    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n-\n-    interBubbles.forEach((interBubble) => {\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        // Анімація для кожного interactive елемента\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n+    hovercards.forEach(card => {\n+        // Обробник наведення курсора\n+        card.addEventListener('mouseenter', () => {\n+            // Знімаємо клас active з усіх карток\n+            hovercards.forEach(c => c.classList.remove('active'));\n+            // Додаємо клас active до поточної картки\n+            card.classList.add('active');\n         });\n \n-        move(); // Запуск анімації\n-    });\n-\n-}\n-\n-\n-$(document).ready(function () {\n-    // ----------------------hero cards - animation----------------------\n-    if ($('.services__hero').length) {\n-        let cards = document.querySelectorAll('.servheroinfo');\n-        let parent = document.querySelector('.services__hero');\n-\n-        parent.addEventListener('mousemove', function (e) {\n-            let rect = parent.getBoundingClientRect();\n-\n-            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-            cards.forEach(card => {\n-                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-            });\n+        // Обробник кліку\n+        card.addEventListener('click', () => {\n+            // Знімаємо клас active з усіх карток\n+            hovercards.forEach(c => c.classList.remove('active'));\n+            // Додаємо клас active до поточної картки\n+            card.classList.add('active');\n         });\n-    }\n-\n-\n-    // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n-\n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n-\n-\n-    // ----------------------testimonials----------------------\n-    if ($('.testim-centered').length) {\n-        var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 1.1,\n-            spaceBetween: 0,\n-            centeredSlides: true,\n-            loop: true,\n-            speed: 1000,\n-\n-            navigation: {\n-                nextEl: \".swiper-button-next-t\",\n-                prevEl: \".swiper-button-prev-t\",\n-            },\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-            },\n-\n-            breakpoints: {\n-                400: {\n-                    slidesPerView: 1.4,\n-                },\n-                576: {\n-                    slidesPerView: 1.5,\n-                },\n-                1400: {\n-                    slidesPerView: 2.4,\n-                },\n-\n-            },\n-        });\n-    }\n-\n-    // ----------------------Auto tabs----------------------\n-    if ($('.autotabs').length) {\n-        var currentIndex = 0;\n-        var totalTabs = $('.autotabs ul li').length;\n-        var interval;\n-\n-        function switchTab(index) {\n-            // Активний пункт меню\n-            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-            // Зображення\n-            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-            // Тексти\n-            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-        }\n-\n-        function startAutoSwitch() {\n-            interval = setInterval(function () {\n-                currentIndex = (currentIndex + 1) % totalTabs;\n-                switchTab(currentIndex);\n-            }, 5000);\n-        }\n-\n-        startAutoSwitch();\n-\n-        $('.autotabs ul li a').click(function (e) {\n-            e.preventDefault();\n-            clearInterval(interval);\n-            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-            switchTab(currentIndex);\n-        });\n-\n-        switchTab(currentIndex);\n-    }\n-\n-\n-    // ----------------------BANER SLIDER----------------------\n-    if ($('.servbansl').length) {\n-        var swiper = new Swiper(\".servbansl\", {\n-            speed: 1000,\n-            spaceBetween: 20,\n-            loop: true,\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-                clickable: true,\n-            },\n-        });\n-    }\n-\n-    // tech stack\n-    if ($('.techslider').length) {\n-        var swiper = new Swiper(\".techslider\", {\n-            slidesPerView: 2.2,\n-            spaceBetween: 16,\n-            mousewheel: true,\n-            freeMode: true,\n-            loop: true,\n-            speed: 1000,\n-            // autoplay: {\n-            //     delay: 2000,\n-            //     disableOnInteraction: false,\n-            // },\n-            breakpoints: {\n-                480: {\n-                    slidesPerView: 2.2,\n-                    spaceBetween: 16,\n-                },\n-                576: {\n-                    slidesPerView: 2.2,\n-                    spaceBetween: 30,\n-                },\n-                768: {\n-                    slidesPerView: 3,\n-                    spaceBetween: 50,\n-                },\n-                992: {\n-                    slidesPerView: 2.2,\n-                    spaceBetween: 16,\n-                },\n-                1200: {\n-                    slidesPerView: 2.8,\n-                    spaceBetween: 16,\n-                },\n-                1400: {\n-                    slidesPerView: 3,\n-                    spaceBetween: 16,\n-                },\n-\n-            },\n-        });\n-\n-        // Функція для перезапуску автоплей\n-        let autoplayTimeout;\n-\n-        // Зупиняємо autoplay при скролі мишкою\n-        swiper.el.addEventListener('wheel', () => {\n-            console.log('Mouse wheel event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n-\n-            clearTimeout(autoplayTimeout);\n-            // Перезапуск через 2 секунди після зупинки прокручування\n-            autoplayTimeout = setTimeout(() => {\n-                console.log('Restarting autoplay after 2 seconds.');\n-                swiper.autoplay.start();\n-            }, 2000);\n-        });\n-\n-        // Зупиняємо autoplay при дотику\n-        swiper.on('touchStart', () => {\n-            console.log('Touch event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n-        });\n-\n-        // Перезапуск autoplay через 2 секунди після дотику\n-        swiper.on('touchEnd', () => {\n-            clearTimeout(autoplayTimeout);\n-            autoplayTimeout = setTimeout(() => {\n-                swiper.autoplay.start();\n-            }, 2000);\n-        });\n-    }\n-\n-\n-\n-    // const hovercards = document.querySelectorAll('.hovercard');\n-\n-    // hovercards.forEach(card => {\n-    //     card.addEventListener('mouseenter', () => {\n-    //         // Знімаємо клас active з усіх карток\n-    //         hovercards.forEach(c => c.classList.remove('active'));\n-    //         // Додаємо клас active до поточної картки\n-    //         card.classList.add('active');\n-    //     });\n-    // });\n-\n-    const hovercards = document.querySelectorAll('.hovercard');\n-\n-hovercards.forEach(card => {\n-    // Обробник наведення курсора\n-    card.addEventListener('mouseenter', () => {\n-        // Знімаємо клас active з усіх карток\n-        hovercards.forEach(c => c.classList.remove('active'));\n-        // Додаємо клас active до поточної картки\n-        card.classList.add('active');\n     });\n \n-    // Обробник кліку\n-    card.addEventListener('click', () => {\n-        // Знімаємо клас active з усіх карток\n-        hovercards.forEach(c => c.classList.remove('active'));\n-        // Додаємо клас active до поточної картки\n-        card.classList.add('active');\n-    });\n-});\n \n \n \n \n@@ -573,6 +285,5 @@\n \n \n \n \n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730108131155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,27 +250,11 @@\n     //         card.classList.add('active');\n     //     });\n     // });\n \n-    const hovercards = document.querySelectorAll('.hovercard');\n+    \n \n-    hovercards.forEach(card => {\n-        // Обробник наведення курсора\n-        card.addEventListener('mouseenter', () => {\n-            // Знімаємо клас active з усіх карток\n-            hovercards.forEach(c => c.classList.remove('active'));\n-            // Додаємо клас active до поточної картки\n-            card.classList.add('active');\n-        });\n \n-        // Обробник кліку\n-        card.addEventListener('click', () => {\n-            // Знімаємо клас active з усіх карток\n-            hovercards.forEach(c => c.classList.remove('active'));\n-            // Додаємо клас active до поточної картки\n-            card.classList.add('active');\n-        });\n-    });\n \n \n \n \n@@ -281,9 +265,5 @@\n \n \n \n \n-\n-\n-\n-\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730108141190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,14 +250,44 @@\n     //         card.classList.add('active');\n     //     });\n     // });\n \n-    \n+    const hovercards = document.querySelectorAll('.hovercard');\n \n+// Function to apply event listeners based on screen width\n+function setHoverCardBehavior() {\n+    // Remove existing event listeners by cloning elements\n+    hovercards.forEach(card => {\n+        const newCard = card.cloneNode(true);\n+        card.replaceWith(newCard);\n+    });\n \n+    const updatedHovercards = document.querySelectorAll('.hovercard');\n \n+    if (window.innerWidth > 1200) {\n+        // For screens larger than 1200px - use hover\n+        updatedHovercards.forEach(card => {\n+            card.addEventListener('mouseenter', () => {\n+                updatedHovercards.forEach(c => c.classList.remove('active'));\n+                card.classList.add('active');\n+            });\n+        });\n+    } else {\n+        // For screens 1200px or smaller - use click\n+        updatedHovercards.forEach(card => {\n+            card.addEventListener('click', () => {\n+                updatedHovercards.forEach(c => c.classList.remove('active'));\n+                card.classList.add('active');\n+            });\n+        });\n+    }\n+}\n \n+// Set initial behavior\n+setHoverCardBehavior();\n \n+// Update behavior on window resize\n+window.addEventListener('resize', setHoverCardBehavior);\n \n \n \n \n@@ -265,5 +295,11 @@\n \n \n \n \n+\n+\n+\n+\n+\n+\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730108175972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,42 +252,36 @@\n     // });\n \n     const hovercards = document.querySelectorAll('.hovercard');\n \n-// Function to apply event listeners based on screen width\n-function setHoverCardBehavior() {\n-    // Remove existing event listeners by cloning elements\n-    hovercards.forEach(card => {\n-        const newCard = card.cloneNode(true);\n-        card.replaceWith(newCard);\n-    });\n+    function setHoverCardBehavior() {\n+        hovercards.forEach(card => {\n+            const newCard = card.cloneNode(true);\n+            card.replaceWith(newCard);\n+        });\n \n-    const updatedHovercards = document.querySelectorAll('.hovercard');\n+        const updatedHovercards = document.querySelectorAll('.hovercard');\n \n-    if (window.innerWidth > 1200) {\n-        // For screens larger than 1200px - use hover\n-        updatedHovercards.forEach(card => {\n-            card.addEventListener('mouseenter', () => {\n-                updatedHovercards.forEach(c => c.classList.remove('active'));\n-                card.classList.add('active');\n+        if (window.innerWidth > 1200) {\n+            updatedHovercards.forEach(card => {\n+                card.addEventListener('mouseenter', () => {\n+                    updatedHovercards.forEach(c => c.classList.remove('active'));\n+                    card.classList.add('active');\n+                });\n             });\n-        });\n-    } else {\n-        // For screens 1200px or smaller - use click\n-        updatedHovercards.forEach(card => {\n-            card.addEventListener('click', () => {\n-                updatedHovercards.forEach(c => c.classList.remove('active'));\n-                card.classList.add('active');\n+        } else {\n+            updatedHovercards.forEach(card => {\n+                card.addEventListener('click', () => {\n+                    updatedHovercards.forEach(c => c.classList.remove('active'));\n+                    card.classList.add('active');\n+                });\n             });\n-        });\n+        }\n     }\n-}\n \n-// Set initial behavior\n-setHoverCardBehavior();\n+    setHoverCardBehavior();\n \n-// Update behavior on window resize\n-window.addEventListener('resize', setHoverCardBehavior);\n+    window.addEventListener('resize', setHoverCardBehavior);\n \n \n \n \n"
                },
                {
                    "date": 1730205407914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,16 +70,16 @@\n     }\n \n \n     // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n+    // if ($('.card').length) {\n+    //     const cardsbox = document.querySelectorAll('.card');\n \n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n+    //     cardsbox.forEach((cardsbox, index) => {\n+    //         cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+    //         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+    //     });\n+    // }\n \n \n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n"
                },
                {
                    "date": 1730205496481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,22 @@\n     //         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     //     });\n     // }\n \n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+    \n+        cardsbox.forEach((card, index) => {\n+            if (index === 0) {\n+                card.style.paddingTop = '100px'; // Першому елементу задаємо 100px\n+            } else {\n+                card.style.paddingTop = `${120 + 20 * index}px`; // Наступним додаємо по 20px\n+            }\n+            card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+        });\n+    }\n \n+\n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n         var swiper = new Swiper(\".testim-centered\", {\n             slidesPerView: 1.1,\n"
                },
                {
                    "date": 1730205503966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n         cardsbox.forEach((card, index) => {\n             if (index === 0) {\n                 card.style.paddingTop = '100px'; // Першому елементу задаємо 100px\n             } else {\n-                card.style.paddingTop = `${120 + 20 * index}px`; // Наступним додаємо по 20px\n+                card.style.paddingTop = `${150 + 20 * index}px`; // Наступним додаємо по 20px\n             }\n             card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         });\n     }\n"
                },
                {
                    "date": 1730205514892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,11 +84,11 @@\n         const cardsbox = document.querySelectorAll('.card');\n     \n         cardsbox.forEach((card, index) => {\n             if (index === 0) {\n-                card.style.paddingTop = '100px'; // Першому елементу задаємо 100px\n+                card.style.paddingTop = '120px'; // Першому елементу задаємо 100px\n             } else {\n-                card.style.paddingTop = `${150 + 20 * index}px`; // Наступним додаємо по 20px\n+                card.style.paddingTop = `${120 + 20 * index}px`; // Наступним додаємо по 20px\n             }\n             card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         });\n     }\n"
                },
                {
                    "date": 1730205615248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,312 @@\n+// ----------------------hero bg - animation----------------------\n+if ($('.gradient-bg').length) {\n+    // document.addEventListener('DOMContentLoaded', () => {\n+    //     const interBubble = document.querySelector('.interactive');\n+    //     let curX = 0;\n+    //     let curY = 0;\n+    //     let tgX = 0;\n+    //     let tgY = 0;\n+\n+    //     const move = () => {\n+    //         curX += (tgX - curX) / 20;\n+    //         curY += (tgY - curY) / 20;\n+    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+    //         requestAnimationFrame(move);\n+    //     };\n+\n+    //     window.addEventListener('mousemove', (event) => {\n+    //         tgX = event.clientX;\n+    //         tgY = event.clientY;\n+    //     });\n+\n+    //     move();\n+    // });\n+    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n+\n+    interBubbles.forEach((interBubble) => {\n+        let curX = 0;\n+        let curY = 0;\n+        let tgX = 0;\n+        let tgY = 0;\n+\n+        // Анімація для кожного interactive елемента\n+        const move = () => {\n+            curX += (tgX - curX) / 20;\n+            curY += (tgY - curY) / 20;\n+            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n+            requestAnimationFrame(move);\n+        };\n+\n+        window.addEventListener('mousemove', (event) => {\n+            tgX = event.clientX;\n+            tgY = event.clientY;\n+        });\n+\n+        move(); // Запуск анімації\n+    });\n+\n+}\n+\n+\n+$(document).ready(function () {\n+    // ----------------------hero cards - animation----------------------\n+    if ($('.services__hero').length) {\n+        let cards = document.querySelectorAll('.servheroinfo');\n+        let parent = document.querySelector('.services__hero');\n+\n+        parent.addEventListener('mousemove', function (e) {\n+            let rect = parent.getBoundingClientRect();\n+\n+            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n+            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n+\n+            xAxis = Math.max(-40, Math.min(40, xAxis));\n+            yAxis = Math.max(-40, Math.min(40, yAxis));\n+\n+            cards.forEach(card => {\n+                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n+            });\n+        });\n+    }\n+\n+\n+    // ----------------------Success stories----------------------\n+    if ($('.card').length) {\n+        const cardsbox = document.querySelectorAll('.card');\n+\n+        cardsbox.forEach((cardsbox, index) => {\n+            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n+        });\n+    }\n+\n+    // if ($('.card').length) {\n+    //     const cardsbox = document.querySelectorAll('.card');\n+    \n+    //     cardsbox.forEach((card, index) => {\n+    //         if (index === 0) {\n+    //             card.style.paddingTop = '120px'; // Першому елементу задаємо 100px\n+    //         } else {\n+    //             card.style.paddingTop = `${120 + 20 * index}px`; // Наступним додаємо по 20px\n+    //         }\n+    //         card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n+    //     });\n+    // }\n+\n+\n+    // ----------------------testimonials----------------------\n+    if ($('.testim-centered').length) {\n+        var swiper = new Swiper(\".testim-centered\", {\n+            slidesPerView: 1.1,\n+            spaceBetween: 0,\n+            centeredSlides: true,\n+            loop: true,\n+            speed: 1000,\n+\n+            navigation: {\n+                nextEl: \".swiper-button-next-t\",\n+                prevEl: \".swiper-button-prev-t\",\n+            },\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+            },\n+\n+            breakpoints: {\n+                400: {\n+                    slidesPerView: 1.4,\n+                },\n+                576: {\n+                    slidesPerView: 1.5,\n+                },\n+                1400: {\n+                    slidesPerView: 2.4,\n+                },\n+\n+            },\n+        });\n+    }\n+\n+    // ----------------------Auto tabs----------------------\n+    if ($('.autotabs').length) {\n+        var currentIndex = 0;\n+        var totalTabs = $('.autotabs ul li').length;\n+        var interval;\n+\n+        function switchTab(index) {\n+            // Активний пункт меню\n+            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n+\n+            // Зображення\n+            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n+\n+            // Тексти\n+            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n+        }\n+\n+        function startAutoSwitch() {\n+            interval = setInterval(function () {\n+                currentIndex = (currentIndex + 1) % totalTabs;\n+                switchTab(currentIndex);\n+            }, 5000);\n+        }\n+\n+        startAutoSwitch();\n+\n+        $('.autotabs ul li a').click(function (e) {\n+            e.preventDefault();\n+            clearInterval(interval);\n+            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n+            switchTab(currentIndex);\n+        });\n+\n+        switchTab(currentIndex);\n+    }\n+\n+\n+    // ----------------------BANER SLIDER----------------------\n+    if ($('.servbansl').length) {\n+        var swiper = new Swiper(\".servbansl\", {\n+            speed: 1000,\n+            spaceBetween: 20,\n+            loop: true,\n+\n+            pagination: {\n+                el: \".swiper-pagination\",\n+                clickable: true,\n+            },\n+        });\n+    }\n+\n+    // tech stack\n+    if ($('.techslider').length) {\n+        var swiper = new Swiper(\".techslider\", {\n+            slidesPerView: 2.3,\n+            spaceBetween: 16,\n+            mousewheel: true,\n+            freeMode: true,\n+            loop: true,\n+            speed: 1000,\n+            // autoplay: {\n+            //     delay: 2000,\n+            //     disableOnInteraction: false,\n+            // },\n+            breakpoints: {\n+                480: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 16,\n+                },\n+                576: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 30,\n+                },\n+                768: {\n+                    slidesPerView: 3,\n+                    spaceBetween: 50,\n+                },\n+                992: {\n+                    slidesPerView: 2.2,\n+                    spaceBetween: 16,\n+                },\n+                1200: {\n+                    slidesPerView: 2.8,\n+                    spaceBetween: 16,\n+                },\n+                1400: {\n+                    slidesPerView: 3,\n+                    spaceBetween: 16,\n+                },\n+\n+            },\n+        });\n+\n+        // Функція для перезапуску автоплей\n+        let autoplayTimeout;\n+\n+        // Зупиняємо autoplay при скролі мишкою\n+        swiper.el.addEventListener('wheel', () => {\n+            console.log('Mouse wheel event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+\n+            clearTimeout(autoplayTimeout);\n+            // Перезапуск через 2 секунди після зупинки прокручування\n+            autoplayTimeout = setTimeout(() => {\n+                console.log('Restarting autoplay after 2 seconds.');\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n+\n+        // Зупиняємо autoplay при дотику\n+        swiper.on('touchStart', () => {\n+            console.log('Touch event detected. Stopping autoplay.');\n+            swiper.autoplay.stop();\n+        });\n+\n+        // Перезапуск autoplay через 2 секунди після дотику\n+        swiper.on('touchEnd', () => {\n+            clearTimeout(autoplayTimeout);\n+            autoplayTimeout = setTimeout(() => {\n+                swiper.autoplay.start();\n+            }, 2000);\n+        });\n+    }\n+\n+\n+\n+    // const hovercards = document.querySelectorAll('.hovercard');\n+\n+    // hovercards.forEach(card => {\n+    //     card.addEventListener('mouseenter', () => {\n+    //         // Знімаємо клас active з усіх карток\n+    //         hovercards.forEach(c => c.classList.remove('active'));\n+    //         // Додаємо клас active до поточної картки\n+    //         card.classList.add('active');\n+    //     });\n+    // });\n+\n+    const hovercards = document.querySelectorAll('.hovercard');\n+\n+    function setHoverCardBehavior() {\n+        hovercards.forEach(card => {\n+            const newCard = card.cloneNode(true);\n+            card.replaceWith(newCard);\n+        });\n+\n+        const updatedHovercards = document.querySelectorAll('.hovercard');\n+\n+        if (window.innerWidth > 1200) {\n+            updatedHovercards.forEach(card => {\n+                card.addEventListener('mouseenter', () => {\n+                    updatedHovercards.forEach(c => c.classList.remove('active'));\n+                    card.classList.add('active');\n+                });\n+            });\n+        } else {\n+            updatedHovercards.forEach(card => {\n+                card.addEventListener('click', () => {\n+                    updatedHovercards.forEach(c => c.classList.remove('active'));\n+                    card.classList.add('active');\n+                });\n+            });\n+        }\n+    }\n+\n+    setHoverCardBehavior();\n+\n+    window.addEventListener('resize', setHoverCardBehavior);\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730205642020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,323 +70,11 @@\n     }\n \n \n     // ----------------------Success stories----------------------\n-    if ($('.card').length) {\n-        const cardsbox = document.querySelectorAll('.card');\n-\n-        cardsbox.forEach((cardsbox, index) => {\n-            cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-            cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n-        });\n-    }\n-\n     // if ($('.card').length) {\n     //     const cardsbox = document.querySelectorAll('.card');\n-    \n-    //     cardsbox.forEach((card, index) => {\n-    //         if (index === 0) {\n-    //             card.style.paddingTop = '120px'; // Першому елементу задаємо 100px\n-    //         } else {\n-    //             card.style.paddingTop = `${120 + 20 * index}px`; // Наступним додаємо по 20px\n-    //         }\n-    //         card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n-    //     });\n-    // }\n \n-\n-    // ----------------------testimonials----------------------\n-    if ($('.testim-centered').length) {\n-        var swiper = new Swiper(\".testim-centered\", {\n-            slidesPerView: 1.1,\n-            spaceBetween: 0,\n-            centeredSlides: true,\n-            loop: true,\n-            speed: 1000,\n-\n-            navigation: {\n-                nextEl: \".swiper-button-next-t\",\n-                prevEl: \".swiper-button-prev-t\",\n-            },\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-            },\n-\n-            breakpoints: {\n-                400: {\n-                    slidesPerView: 1.4,\n-                },\n-                576: {\n-                    slidesPerView: 1.5,\n-                },\n-                1400: {\n-                    slidesPerView: 2.4,\n-                },\n-\n-            },\n-        });\n-    }\n-\n-    // ----------------------Auto tabs----------------------\n-    if ($('.autotabs').length) {\n-        var currentIndex = 0;\n-        var totalTabs = $('.autotabs ul li').length;\n-        var interval;\n-\n-        function switchTab(index) {\n-            // Активний пункт меню\n-            $('.autotabs ul li').removeClass('active').eq(index).addClass('active');\n-\n-            // Зображення\n-            $('.tabimgs .imgwrap').hide().eq(index).fadeIn();\n-\n-            // Тексти\n-            $('.tabtexts .tabtext').hide().eq(index).fadeIn();\n-        }\n-\n-        function startAutoSwitch() {\n-            interval = setInterval(function () {\n-                currentIndex = (currentIndex + 1) % totalTabs;\n-                switchTab(currentIndex);\n-            }, 5000);\n-        }\n-\n-        startAutoSwitch();\n-\n-        $('.autotabs ul li a').click(function (e) {\n-            e.preventDefault();\n-            clearInterval(interval);\n-            currentIndex = $(this).parent().index(); // отримуємо індекс обраного елементу\n-            switchTab(currentIndex);\n-        });\n-\n-        switchTab(currentIndex);\n-    }\n-\n-\n-    // ----------------------BANER SLIDER----------------------\n-    if ($('.servbansl').length) {\n-        var swiper = new Swiper(\".servbansl\", {\n-            speed: 1000,\n-            spaceBetween: 20,\n-            loop: true,\n-\n-            pagination: {\n-                el: \".swiper-pagination\",\n-                clickable: true,\n-            },\n-        });\n-    }\n-\n-    // tech stack\n-    if ($('.techslider').length) {\n-        var swiper = new Swiper(\".techslider\", {\n-            slidesPerView: 2.3,\n-            spaceBetween: 16,\n-            mousewheel: true,\n-            freeMode: true,\n-            loop: true,\n-            speed: 1000,\n-            // autoplay: {\n-            //     delay: 2000,\n-            //     disableOnInteraction: false,\n-            // },\n-            breakpoints: {\n-                480: {\n-                    slidesPerView: 2.2,\n-                    spaceBetween: 16,\n-                },\n-                576: {\n-                    slidesPerView: 2.2,\n-                    spaceBetween: 30,\n-                },\n-                768: {\n-                    slidesPerView: 3,\n-                    spaceBetween: 50,\n-                },\n-                992: {\n-                    slidesPerView: 2.2,\n-                    spaceBetween: 16,\n-                },\n-                1200: {\n-                    slidesPerView: 2.8,\n-                    spaceBetween: 16,\n-                },\n-                1400: {\n-                    slidesPerView: 3,\n-                    spaceBetween: 16,\n-                },\n-\n-            },\n-        });\n-\n-        // Функція для перезапуску автоплей\n-        let autoplayTimeout;\n-\n-        // Зупиняємо autoplay при скролі мишкою\n-        swiper.el.addEventListener('wheel', () => {\n-            console.log('Mouse wheel event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n-\n-            clearTimeout(autoplayTimeout);\n-            // Перезапуск через 2 секунди після зупинки прокручування\n-            autoplayTimeout = setTimeout(() => {\n-                console.log('Restarting autoplay after 2 seconds.');\n-                swiper.autoplay.start();\n-            }, 2000);\n-        });\n-\n-        // Зупиняємо autoplay при дотику\n-        swiper.on('touchStart', () => {\n-            console.log('Touch event detected. Stopping autoplay.');\n-            swiper.autoplay.stop();\n-        });\n-\n-        // Перезапуск autoplay через 2 секунди після дотику\n-        swiper.on('touchEnd', () => {\n-            clearTimeout(autoplayTimeout);\n-            autoplayTimeout = setTimeout(() => {\n-                swiper.autoplay.start();\n-            }, 2000);\n-        });\n-    }\n-\n-\n-\n-    // const hovercards = document.querySelectorAll('.hovercard');\n-\n-    // hovercards.forEach(card => {\n-    //     card.addEventListener('mouseenter', () => {\n-    //         // Знімаємо клас active з усіх карток\n-    //         hovercards.forEach(c => c.classList.remove('active'));\n-    //         // Додаємо клас active до поточної картки\n-    //         card.classList.add('active');\n-    //     });\n-    // });\n-\n-    const hovercards = document.querySelectorAll('.hovercard');\n-\n-    function setHoverCardBehavior() {\n-        hovercards.forEach(card => {\n-            const newCard = card.cloneNode(true);\n-            card.replaceWith(newCard);\n-        });\n-\n-        const updatedHovercards = document.querySelectorAll('.hovercard');\n-\n-        if (window.innerWidth > 1200) {\n-            updatedHovercards.forEach(card => {\n-                card.addEventListener('mouseenter', () => {\n-                    updatedHovercards.forEach(c => c.classList.remove('active'));\n-                    card.classList.add('active');\n-                });\n-            });\n-        } else {\n-            updatedHovercards.forEach(card => {\n-                card.addEventListener('click', () => {\n-                    updatedHovercards.forEach(c => c.classList.remove('active'));\n-                    card.classList.add('active');\n-                });\n-            });\n-        }\n-    }\n-\n-    setHoverCardBehavior();\n-\n-    window.addEventListener('resize', setHoverCardBehavior);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-})\n-// ----------------------hero bg - animation----------------------\n-if ($('.gradient-bg').length) {\n-    // document.addEventListener('DOMContentLoaded', () => {\n-    //     const interBubble = document.querySelector('.interactive');\n-    //     let curX = 0;\n-    //     let curY = 0;\n-    //     let tgX = 0;\n-    //     let tgY = 0;\n-\n-    //     const move = () => {\n-    //         curX += (tgX - curX) / 20;\n-    //         curY += (tgY - curY) / 20;\n-    //         interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-    //         requestAnimationFrame(move);\n-    //     };\n-\n-    //     window.addEventListener('mousemove', (event) => {\n-    //         tgX = event.clientX;\n-    //         tgY = event.clientY;\n-    //     });\n-\n-    //     move();\n-    // });\n-    const interBubbles = document.querySelectorAll('.interactive'); // Знаходимо всі елементи з класом 'interactive'\n-\n-    interBubbles.forEach((interBubble) => {\n-        let curX = 0;\n-        let curY = 0;\n-        let tgX = 0;\n-        let tgY = 0;\n-\n-        // Анімація для кожного interactive елемента\n-        const move = () => {\n-            curX += (tgX - curX) / 20;\n-            curY += (tgY - curY) / 20;\n-            interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n-            requestAnimationFrame(move);\n-        };\n-\n-        window.addEventListener('mousemove', (event) => {\n-            tgX = event.clientX;\n-            tgY = event.clientY;\n-        });\n-\n-        move(); // Запуск анімації\n-    });\n-\n-}\n-\n-\n-$(document).ready(function () {\n-    // ----------------------hero cards - animation----------------------\n-    if ($('.services__hero').length) {\n-        let cards = document.querySelectorAll('.servheroinfo');\n-        let parent = document.querySelector('.services__hero');\n-\n-        parent.addEventListener('mousemove', function (e) {\n-            let rect = parent.getBoundingClientRect();\n-\n-            let xAxis = (rect.width / 2 - (e.clientX - rect.left)) / 20;\n-            let yAxis = (rect.height / 2 - (e.clientY - rect.top)) / 10;\n-\n-            xAxis = Math.max(-40, Math.min(40, xAxis));\n-            yAxis = Math.max(-40, Math.min(40, yAxis));\n-\n-            cards.forEach(card => {\n-                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;\n-            });\n-        });\n-    }\n-\n-\n-    // ----------------------Success stories----------------------\n-    // if ($('.card').length) {\n-    //     const cardsbox = document.querySelectorAll('.card');\n-\n     //     cardsbox.forEach((cardsbox, index) => {\n     //         cardsbox.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n     //         cardsbox.style.paddingTop = `${20 * (index + 1)}px`; // Збільшуємо padding-top на 20px для кожного наступного\n     //     });\n"
                },
                {
                    "date": 1730205693652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,15 +84,17 @@\n         const cardsbox = document.querySelectorAll('.card');\n     \n         cardsbox.forEach((card, index) => {\n             if (index === 0) {\n-                card.style.paddingTop = '120px'; // Першому елементу задаємо 100px\n+                card.style.top = '100px'; // Перший елемент отримує top 100px\n             } else {\n-                card.style.paddingTop = `${120 + 20 * index}px`; // Наступним додаємо по 20px\n+                card.style.top = `${100 + 20 * index}px`; // Наступним додаємо по 20px до top\n             }\n+            card.style.position = 'relative'; // Встановлюємо позицію відносно, щоб працював top\n             card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         });\n     }\n+    \n \n \n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n"
                },
                {
                    "date": 1730205723708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n                 card.style.top = '100px'; // Перший елемент отримує top 100px\n             } else {\n                 card.style.top = `${100 + 20 * index}px`; // Наступним додаємо по 20px до top\n             }\n-            card.style.position = 'relative'; // Встановлюємо позицію відносно, щоб працював top\n+            // card.style.position = 'relative'; // Встановлюємо позицію відносно, щоб працював top\n             card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         });\n     }\n     \n"
                },
                {
                    "date": 1730205944490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,11 +84,11 @@\n         const cardsbox = document.querySelectorAll('.card');\n     \n         cardsbox.forEach((card, index) => {\n             if (index === 0) {\n-                card.style.top = '100px'; // Перший елемент отримує top 100px\n+                card.style.top = '200px'; // Перший елемент отримує top 100px\n             } else {\n-                card.style.top = `${100 + 20 * index}px`; // Наступним додаємо по 20px до top\n+                card.style.top = `${200 + 20 * index}px`; // Наступним додаємо по 20px до top\n             }\n             // card.style.position = 'relative'; // Встановлюємо позицію відносно, щоб працював top\n             card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         });\n"
                },
                {
                    "date": 1730206476997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,25 @@\n             // card.style.position = 'relative'; // Встановлюємо позицію відносно, щоб працював top\n             card.style.zIndex = index + 1; // Призначаємо кожному наступному більший z-index\n         });\n     }\n+\n+    document.addEventListener('scroll', () => {\n+        const cards = document.querySelectorAll('#cards .card');\n+        const textboxes = document.querySelectorAll('.successstory__right .textboxes');\n     \n+        cards.forEach((card, index) => {\n+            const rect = card.getBoundingClientRect();\n+            // Перевіряємо, чи знаходиться елемент у видимій області екрана\n+            if (rect.top >= 0 && rect.bottom <= window.innerHeight) {\n+                // Ховаємо всі textboxes, окрім поточного\n+                textboxes.forEach((box, i) => {\n+                    box.classList.toggle('hide', i !== index);\n+                });\n+            }\n+        });\n+    });\n+    \n \n \n     // ----------------------testimonials----------------------\n     if ($('.testim-centered').length) {\n"
                }
            ],
            "date": 1729686510028,
            "name": "Commit-0",
            "content": "document.addEventListener('DOMContentLoaded', () => {\n    const interBubble = document.querySelector('.interactive');\n    let curX = 0;\n    let curY = 0;\n    let tgX = 0;\n    let tgY = 0;\n\n    const move = () => {\n        curX += (tgX - curX) / 20;\n        curY += (tgY - curY) / 20;\n        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n        requestAnimationFrame(move);\n    };\n\n    window.addEventListener('mousemove', (event) => {\n        tgX = event.clientX;\n        tgY = event.clientY;\n    });\n\n    move();\n});"
        }
    ]
}